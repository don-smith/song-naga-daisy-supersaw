ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"supersaw.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9DaisySeedD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB2528:
  29              		.file 1 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB154:
  36              	.LBI154:
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 2


  37              		.file 2 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 3


  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
  38              		.loc 2 78 5 view .LVU1
  39              		.loc 2 78 5 is_stmt 0 view .LVU2
  40              	.LBE154:
  41              	.LBB155:
  42              	.LBI155:
  43              		.file 3 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 4


  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE155:
  47              	.LBB156:
  48              	.LBI156:
  49              		.file 4 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 5


  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 93 5 is_stmt 1 view .LVU5
  51              		.loc 4 93 5 is_stmt 0 view .LVU6
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 6


  52              	.LBE156:
  53              	.LBB157:
  54              	.LBI157:
  55              		.file 5 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 7


  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE157:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE2528:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text._ZN7daisysp5AToneD2Ev,"axG",%progbits,_ZN7daisysp5AToneD5Ev,comdat
  67              		.align	1
  68              		.p2align 2,,3
  69              		.weak	_ZN7daisysp5AToneD2Ev
  70              		.syntax unified
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 8


  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-d16
  75              	_ZN7daisysp5AToneD2Ev:
  76              	.LVL1:
  77              	.LFB4474:
  78              		.file 6 "../../DaisySP//Source/Filters/atone.h"
   1:../../DaisySP//Source/Filters/atone.h **** #pragma once
   2:../../DaisySP//Source/Filters/atone.h **** #ifndef DSY_ATONE_H
   3:../../DaisySP//Source/Filters/atone.h **** #define DSY_ATONE_H
   4:../../DaisySP//Source/Filters/atone.h **** 
   5:../../DaisySP//Source/Filters/atone.h **** #include <stdint.h>
   6:../../DaisySP//Source/Filters/atone.h **** #ifdef __cplusplus
   7:../../DaisySP//Source/Filters/atone.h **** 
   8:../../DaisySP//Source/Filters/atone.h **** namespace daisysp
   9:../../DaisySP//Source/Filters/atone.h **** {
  10:../../DaisySP//Source/Filters/atone.h **** /** A first-order recursive high-pass filter with variable frequency response.
  11:../../DaisySP//Source/Filters/atone.h ****      Original Author(s): Barry Vercoe, John FFitch, Gabriel Maldonado
  12:../../DaisySP//Source/Filters/atone.h **** 
  13:../../DaisySP//Source/Filters/atone.h ****      Year: 1991
  14:../../DaisySP//Source/Filters/atone.h **** 
  15:../../DaisySP//Source/Filters/atone.h ****      Original Location: Csound -- OOps/ugens5.c
  16:../../DaisySP//Source/Filters/atone.h **** 
  17:../../DaisySP//Source/Filters/atone.h ****      Ported from soundpipe by Ben Sergentanis, May 2020
  18:../../DaisySP//Source/Filters/atone.h ****     */
  19:../../DaisySP//Source/Filters/atone.h **** class ATone
  20:../../DaisySP//Source/Filters/atone.h **** {
  21:../../DaisySP//Source/Filters/atone.h ****   public:
  22:../../DaisySP//Source/Filters/atone.h ****     ATone() {}
  23:../../DaisySP//Source/Filters/atone.h ****     ~ATone() {}
  79              		.loc 6 23 5 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              		.loc 6 23 15 is_stmt 0 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE4474:
  89              		.weak	_ZN7daisysp5AToneD1Ev
  90              		.thumb_set _ZN7daisysp5AToneD1Ev,_ZN7daisysp5AToneD2Ev
  91              		.section	.text.__tcf_0,"ax",%progbits
  92              		.align	1
  93              		.p2align 2,,3
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv5-d16
  99              	__tcf_0:
 100              	.LFB5342:
 101              		.file 7 "supersaw.cpp"
   1:supersaw.cpp  **** #include "daisy_seed.h"
   2:supersaw.cpp  **** #include "daisysp.h"
   3:supersaw.cpp  **** #define NUMBER_OF_SAWS 7
   4:supersaw.cpp  **** #define CURVE_POINTS 17
   5:supersaw.cpp  **** #define SAMPLE_RATE 48000
   6:supersaw.cpp  **** #define ROOT_FREQ 110.0
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 9


   7:supersaw.cpp  **** using namespace daisy;
   8:supersaw.cpp  **** using namespace daisysp;
   9:supersaw.cpp  **** DaisySeed hw;
  10:supersaw.cpp  **** Oscillator superSaws[ NUMBER_OF_SAWS ];
 102              		.loc 7 10 12 is_stmt 1 view -0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              		.loc 7 10 12 is_stmt 0 view .LVU13
 108 0000 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE5342:
 112 0002 00BF     		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 113              		.align	1
 114              		.p2align 2,,3
 115              		.global	_Z13AudioCallbackPKPKfPPfj
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv5-d16
 121              	_Z13AudioCallbackPKPKfPPfj:
 122              	.LVL2:
 123              	.LFB4779:
  11:supersaw.cpp  **** ATone hpf;
  12:supersaw.cpp  **** float detuneCurve[ CURVE_POINTS ] = {
  13:supersaw.cpp  **** 	0.0,
  14:supersaw.cpp  **** 	0.00967268,
  15:supersaw.cpp  **** 	0.0220363,
  16:supersaw.cpp  **** 	0.0339636,
  17:supersaw.cpp  **** 	0.0467636,
  18:supersaw.cpp  **** 	0.0591273,
  19:supersaw.cpp  **** 	0.0714909,
  20:supersaw.cpp  **** 	0.0838545,
  21:supersaw.cpp  **** 	0.0967273,
  22:supersaw.cpp  **** 	0.121527,
  23:supersaw.cpp  **** 	0.147127,
  24:supersaw.cpp  **** 	0.193455,
  25:supersaw.cpp  **** 	0.243418,
  26:supersaw.cpp  **** 	0.2933815,
  27:supersaw.cpp  **** 	0.343345,
  28:supersaw.cpp  **** 	0.3928, 
  29:supersaw.cpp  **** 	1.0
  30:supersaw.cpp  **** };
  31:supersaw.cpp  **** float ampCurve[ CURVE_POINTS ] = {
  32:supersaw.cpp  **** 	0.03836,
  33:supersaw.cpp  **** 	0.12,
  34:supersaw.cpp  **** 	0.19,
  35:supersaw.cpp  **** 	0.25,
  36:supersaw.cpp  **** 	0.31,
  37:supersaw.cpp  **** 	0.37,
  38:supersaw.cpp  **** 	0.42,
  39:supersaw.cpp  **** 	0.46,
  40:supersaw.cpp  **** 	0.5,
  41:supersaw.cpp  **** 	0.53,
  42:supersaw.cpp  **** 	0.56,
  43:supersaw.cpp  **** 	0.58,
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 10


  44:supersaw.cpp  **** 	0.59,
  45:supersaw.cpp  **** 	0.6,
  46:supersaw.cpp  **** 	0.605,
  47:supersaw.cpp  **** 	0.6,
  48:supersaw.cpp  **** 	0.59
  49:supersaw.cpp  **** };
  50:supersaw.cpp  **** float knobValue,
  51:supersaw.cpp  **** 	detunes[ NUMBER_OF_SAWS ] = {
  52:supersaw.cpp  **** 		-0.11002314,
  53:supersaw.cpp  **** 		-0.0628844,
  54:supersaw.cpp  **** 		-0.01952357,
  55:supersaw.cpp  **** 		0.0,
  56:supersaw.cpp  **** 		0.01991221,
  57:supersaw.cpp  **** 		0.06216538,
  58:supersaw.cpp  **** 		0.10745242
  59:supersaw.cpp  **** 	},
  60:supersaw.cpp  **** 	phases[ NUMBER_OF_SAWS ],
  61:supersaw.cpp  **** 	mixAmounts[ NUMBER_OF_SAWS ] = { 0.4, 0.4, 0.4, 0.4, 0.5, 0.5, 0.45 };
  62:supersaw.cpp  **** enum AdcChannel { waveformKnob, NUM_ADC_CHANNELS };
  63:supersaw.cpp  **** void AudioCallback( AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size ){
 124              		.loc 7 63 94 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 0, uses_anonymous_args = 0
  64:supersaw.cpp  **** 	for( size_t i = 0; i < size; i++ ){
 128              		.loc 7 64 2 view .LVU15
 129              	.LBB158:
 130              		.loc 7 64 23 view .LVU16
 131 0000 52B3     		cbz	r2, .L15
 132              	.LBE158:
  63:supersaw.cpp  **** 	for( size_t i = 0; i < size; i++ ){
 133              		.loc 7 63 94 is_stmt 0 view .LVU17
 134 0002 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 135              		.cfi_def_cfa_offset 28
 136              		.cfi_offset 4, -28
 137              		.cfi_offset 5, -24
 138              		.cfi_offset 6, -20
 139              		.cfi_offset 7, -16
 140              		.cfi_offset 8, -12
 141              		.cfi_offset 9, -8
 142              		.cfi_offset 14, -4
 143 0006 0F46     		mov	r7, r1
 144 0008 83B0     		sub	sp, sp, #12
 145              		.cfi_def_cfa_offset 40
 146 000a 9046     		mov	r8, r2
 147              	.LBB163:
 148              		.loc 7 64 14 view .LVU18
 149 000c 0026     		movs	r6, #0
 150 000e 134D     		ldr	r5, .L18
 151              	.LVL3:
 152              	.L8:
 153              	.LBB159:
  65:supersaw.cpp  **** 		float superSawSignal = 0.0;
 154              		.loc 7 65 3 is_stmt 1 view .LVU19
 155              		.loc 7 65 9 is_stmt 0 view .LVU20
 156 0010 0023     		movs	r3, #0
 157 0012 134C     		ldr	r4, .L18+4
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 11


 158 0014 0193     		str	r3, [sp, #4]	@ float
  66:supersaw.cpp  **** 		for( int i = 0; i < NUMBER_OF_SAWS; i++ ) superSawSignal += ( superSaws[ i ].Process() );
 159              		.loc 7 66 3 is_stmt 1 view .LVU21
 160              	.LVL4:
 161              	.LBB160:
 162              		.loc 7 66 21 view .LVU22
 163              	.L7:
 164              		.loc 7 66 45 discriminator 2 view .LVU23
 165              		.loc 7 66 87 is_stmt 0 discriminator 2 view .LVU24
 166 0016 2046     		mov	r0, r4
 167              		.loc 7 66 21 discriminator 2 view .LVU25
 168 0018 2834     		adds	r4, r4, #40
 169              		.loc 7 66 87 discriminator 2 view .LVU26
 170 001a FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 171              	.LVL5:
 172              		.loc 7 66 60 discriminator 2 view .LVU27
 173 001e DDED017A 		vldr.32	s15, [sp, #4]
 174              		.loc 7 66 21 discriminator 2 view .LVU28
 175 0022 A542     		cmp	r5, r4
 176              		.loc 7 66 60 discriminator 2 view .LVU29
 177 0024 37EE800A 		vadd.f32	s0, s15, s0
 178 0028 8DED010A 		vstr.32	s0, [sp, #4]
 179              		.loc 7 66 3 is_stmt 1 discriminator 2 view .LVU30
 180              		.loc 7 66 21 discriminator 2 view .LVU31
 181 002c F3D1     		bne	.L7
 182              	.LBE160:
  67:supersaw.cpp  **** 		out[0][i] = out[1][i] = hpf.Process( superSawSignal );
 183              		.loc 7 67 3 discriminator 2 view .LVU32
 184              		.loc 7 67 23 is_stmt 0 discriminator 2 view .LVU33
 185 002e 7C68     		ldr	r4, [r7, #4]
 186              		.loc 7 67 38 discriminator 2 view .LVU34
 187 0030 01A9     		add	r1, sp, #4
 188 0032 0C48     		ldr	r0, .L18+8
 189 0034 4FEA8609 		lsl	r9, r6, #2
 190 0038 FFF7FEFF 		bl	_ZN7daisysp5ATone7ProcessERf
 191              	.LVL6:
 192              		.loc 7 67 13 discriminator 2 view .LVU35
 193 003c 3B68     		ldr	r3, [r7]
 194              		.loc 7 67 23 discriminator 2 view .LVU36
 195 003e 04EB8604 		add	r4, r4, r6, lsl #2
 196              	.LBE159:
  64:supersaw.cpp  **** 		float superSawSignal = 0.0;
 197              		.loc 7 64 2 discriminator 2 view .LVU37
 198 0042 0136     		adds	r6, r6, #1
 199              	.LVL7:
 200              	.LBB161:
 201              		.loc 7 67 13 discriminator 2 view .LVU38
 202 0044 4B44     		add	r3, r3, r9
 203              	.LBE161:
  64:supersaw.cpp  **** 		float superSawSignal = 0.0;
 204              		.loc 7 64 23 discriminator 2 view .LVU39
 205 0046 B045     		cmp	r8, r6
 206              	.LBB162:
 207              		.loc 7 67 25 discriminator 2 view .LVU40
 208 0048 84ED000A 		vstr.32	s0, [r4]
 209              		.loc 7 67 13 discriminator 2 view .LVU41
 210 004c 83ED000A 		vstr.32	s0, [r3]
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 12


 211              	.LBE162:
  64:supersaw.cpp  **** 		float superSawSignal = 0.0;
 212              		.loc 7 64 2 is_stmt 1 discriminator 2 view .LVU42
 213              	.LVL8:
  64:supersaw.cpp  **** 		float superSawSignal = 0.0;
 214              		.loc 7 64 23 discriminator 2 view .LVU43
 215 0050 DED1     		bne	.L8
 216              	.LBE163:
  68:supersaw.cpp  **** 	}
  69:supersaw.cpp  **** }
 217              		.loc 7 69 1 is_stmt 0 view .LVU44
 218 0052 03B0     		add	sp, sp, #12
 219              		.cfi_def_cfa_offset 28
 220              		@ sp needed
 221 0054 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 222              	.LVL9:
 223              	.L15:
 224              		.cfi_def_cfa_offset 0
 225              		.cfi_restore 4
 226              		.cfi_restore 5
 227              		.cfi_restore 6
 228              		.cfi_restore 7
 229              		.cfi_restore 8
 230              		.cfi_restore 9
 231              		.cfi_restore 14
 232              		.loc 7 69 1 view .LVU45
 233 0058 7047     		bx	lr
 234              	.L19:
 235 005a 00BF     		.align	2
 236              	.L18:
 237 005c 18010000 		.word	.LANCHOR0+280
 238 0060 00000000 		.word	.LANCHOR0
 239 0064 00000000 		.word	.LANCHOR1
 240              		.cfi_endproc
 241              	.LFE4779:
 243              		.section	.text._Z12lookupDetunef,"ax",%progbits
 244              		.align	1
 245              		.p2align 2,,3
 246              		.global	_Z12lookupDetunef
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu fpv5-d16
 252              	_Z12lookupDetunef:
 253              	.LVL10:
 254              	.LFB4780:
  70:supersaw.cpp  **** float lookupDetune( float knobAmount ){
 255              		.loc 7 70 39 is_stmt 1 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
  71:supersaw.cpp  **** 	int knobCurveIndex = knobAmount * CURVE_POINTS;
 260              		.loc 7 71 2 view .LVU47
 261              		.loc 7 71 34 is_stmt 0 view .LVU48
 262 0000 F3EE017A 		vmov.f32	s15, #1.7e+1
  72:supersaw.cpp  **** 	float minDetune = detuneCurve[ knobCurveIndex ];
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 13


 263              		.loc 7 72 8 view .LVU49
 264 0004 0C4A     		ldr	r2, .L21
  71:supersaw.cpp  **** 	int knobCurveIndex = knobAmount * CURVE_POINTS;
 265              		.loc 7 71 34 view .LVU50
 266 0006 60EE277A 		vmul.f32	s15, s0, s15
  71:supersaw.cpp  **** 	int knobCurveIndex = knobAmount * CURVE_POINTS;
 267              		.loc 7 71 6 view .LVU51
 268 000a FDEEE77A 		vcvt.s32.f32	s15, s15
 269 000e 17EE903A 		vmov	r3, s15	@ int
 270              	.LVL11:
 271              		.loc 7 72 2 is_stmt 1 view .LVU52
 272              		.loc 7 72 8 is_stmt 0 view .LVU53
 273 0012 02EB8301 		add	r1, r2, r3, lsl #2
 274 0016 91ED007A 		vldr.32	s14, [r1]
 275              	.LVL12:
  73:supersaw.cpp  **** 	float maxDetune = detuneCurve[ knobCurveIndex + 1 ];
 276              		.loc 7 73 2 is_stmt 1 view .LVU54
 277              		.loc 7 73 8 is_stmt 0 view .LVU55
 278 001a D1ED016A 		vldr.32	s13, [r1, #4]
 279              	.LVL13:
  74:supersaw.cpp  **** 	float minCurveValue = detuneCurve[ knobCurveIndex ];
 280              		.loc 7 74 2 is_stmt 1 view .LVU56
  75:supersaw.cpp  **** 	float maxCurveValue = detuneCurve[ knobCurveIndex + 1 ];
 281              		.loc 7 75 2 view .LVU57
  76:supersaw.cpp  **** 	float output = minDetune + ( ( maxDetune - minDetune ) * ( ( knobAmount - minCurveValue ) / ( maxC
 282              		.loc 7 76 2 view .LVU58
 283              		.loc 7 76 74 is_stmt 0 view .LVU59
 284 001e 70EE477A 		vsub.f32	s15, s0, s14
 285              		.loc 7 76 110 view .LVU60
 286 0022 C6EE875A 		vdiv.f32	s11, s13, s14
 287              		.loc 7 76 43 view .LVU61
 288 0026 76EEC76A 		vsub.f32	s13, s13, s14
 289              	.LVL14:
 290              		.loc 7 76 92 view .LVU62
 291 002a 87EEA56A 		vdiv.f32	s12, s15, s11
 292              	.LVL15:
  77:supersaw.cpp  **** 	return output;
 293              		.loc 7 77 2 is_stmt 1 view .LVU63
  78:supersaw.cpp  **** }
 294              		.loc 7 78 1 is_stmt 0 view .LVU64
 295 002e A6EE867A 		vfma.f32	s14, s13, s12
 296              	.LVL16:
 297              		.loc 7 78 1 view .LVU65
 298 0032 B0EE470A 		vmov.f32	s0, s14
 299              	.LVL17:
 300              		.loc 7 78 1 view .LVU66
 301 0036 7047     		bx	lr
 302              	.L22:
 303              		.align	2
 304              	.L21:
 305 0038 00000000 		.word	.LANCHOR2
 306              		.cfi_endproc
 307              	.LFE4780:
 309              		.section	.text._Z9lookupAmpf,"ax",%progbits
 310              		.align	1
 311              		.p2align 2,,3
 312              		.global	_Z9lookupAmpf
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 14


 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv5-d16
 318              	_Z9lookupAmpf:
 319              	.LVL18:
 320              	.LFB4781:
  79:supersaw.cpp  **** float lookupAmp( float knobAmount ){
 321              		.loc 7 79 36 is_stmt 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
  80:supersaw.cpp  **** 	int knobCurveIndex = knobAmount * CURVE_POINTS; // [0...15]
 326              		.loc 7 80 2 view .LVU68
 327              		.loc 7 80 34 is_stmt 0 view .LVU69
 328 0000 F3EE016A 		vmov.f32	s13, #1.7e+1
  81:supersaw.cpp  **** 	float minAmp = ampCurve[ knobCurveIndex  ]; // [0.0...~0.6]
 329              		.loc 7 81 8 view .LVU70
 330 0004 114A     		ldr	r2, .L24
  82:supersaw.cpp  **** 	float maxAmp = ampCurve[ knobCurveIndex + 1]; // [0.0...~0.6]
  83:supersaw.cpp  **** 	float minCurveValue = ( float )knobCurveIndex / CURVE_POINTS;
  84:supersaw.cpp  **** 	float maxCurveValue = ( ( float )knobCurveIndex + 1 ) / CURVE_POINTS;
 331              		.loc 7 84 50 view .LVU71
 332 0006 B7EE007A 		vmov.f32	s14, #1.0e+0
  80:supersaw.cpp  **** 	float minAmp = ampCurve[ knobCurveIndex  ]; // [0.0...~0.6]
 333              		.loc 7 80 34 view .LVU72
 334 000a 60EE267A 		vmul.f32	s15, s0, s13
  80:supersaw.cpp  **** 	float minAmp = ampCurve[ knobCurveIndex  ]; // [0.0...~0.6]
 335              		.loc 7 80 6 view .LVU73
 336 000e FDEEE77A 		vcvt.s32.f32	s15, s15
  83:supersaw.cpp  **** 	float maxCurveValue = ( ( float )knobCurveIndex + 1 ) / CURVE_POINTS;
 337              		.loc 7 83 24 view .LVU74
 338 0012 B8EEE75A 		vcvt.f32.s32	s10, s15
  80:supersaw.cpp  **** 	float minAmp = ampCurve[ knobCurveIndex  ]; // [0.0...~0.6]
 339              		.loc 7 80 6 view .LVU75
 340 0016 17EE903A 		vmov	r3, s15	@ int
 341              	.LVL19:
  81:supersaw.cpp  **** 	float maxAmp = ampCurve[ knobCurveIndex + 1]; // [0.0...~0.6]
 342              		.loc 7 81 2 is_stmt 1 view .LVU76
  81:supersaw.cpp  **** 	float maxAmp = ampCurve[ knobCurveIndex + 1]; // [0.0...~0.6]
 343              		.loc 7 81 8 is_stmt 0 view .LVU77
 344 001a 02EB8301 		add	r1, r2, r3, lsl #2
 345              		.loc 7 84 50 view .LVU78
 346 001e 75EE077A 		vadd.f32	s15, s10, s14
  83:supersaw.cpp  **** 	float maxCurveValue = ( ( float )knobCurveIndex + 1 ) / CURVE_POINTS;
 347              		.loc 7 83 8 view .LVU79
 348 0022 C5EE265A 		vdiv.f32	s11, s10, s13
  81:supersaw.cpp  **** 	float maxAmp = ampCurve[ knobCurveIndex + 1]; // [0.0...~0.6]
 349              		.loc 7 81 8 view .LVU80
 350 0026 91ED006A 		vldr.32	s12, [r1]
 351              	.LVL20:
  82:supersaw.cpp  **** 	float minCurveValue = ( float )knobCurveIndex / CURVE_POINTS;
 352              		.loc 7 82 2 is_stmt 1 view .LVU81
  83:supersaw.cpp  **** 	float maxCurveValue = ( ( float )knobCurveIndex + 1 ) / CURVE_POINTS;
 353              		.loc 7 83 2 view .LVU82
 354              		.loc 7 84 2 view .LVU83
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 15


  85:supersaw.cpp  **** 	float output = minAmp + ( ( maxAmp - minAmp ) * ( ( knobAmount - minCurveValue ) / ( maxCurveValue
 355              		.loc 7 85 2 view .LVU84
 356              		.loc 7 85 37 is_stmt 0 view .LVU85
 357 002a 91ED017A 		vldr.32	s14, [r1, #4]
  84:supersaw.cpp  **** 	float output = minAmp + ( ( maxAmp - minAmp ) * ( ( knobAmount - minCurveValue ) / ( maxCurveValue
 358              		.loc 7 84 8 view .LVU86
 359 002e C7EEA64A 		vdiv.f32	s9, s15, s13
 360              		.loc 7 85 37 view .LVU87
 361 0032 37EE467A 		vsub.f32	s14, s14, s12
 362              		.loc 7 85 65 view .LVU88
 363 0036 70EE657A 		vsub.f32	s15, s0, s11
 364              		.loc 7 85 101 view .LVU89
 365 003a 84EEA55A 		vdiv.f32	s10, s9, s11
 366              	.LVL21:
 367              		.loc 7 85 83 view .LVU90
 368 003e C7EE856A 		vdiv.f32	s13, s15, s10
 369              	.LVL22:
  86:supersaw.cpp  **** 	return output;
 370              		.loc 7 86 2 is_stmt 1 view .LVU91
  87:supersaw.cpp  **** }
 371              		.loc 7 87 1 is_stmt 0 view .LVU92
 372 0042 A7EE266A 		vfma.f32	s12, s14, s13
 373              	.LVL23:
 374              		.loc 7 87 1 view .LVU93
 375 0046 B0EE460A 		vmov.f32	s0, s12
 376              	.LVL24:
 377              		.loc 7 87 1 view .LVU94
 378 004a 7047     		bx	lr
 379              	.L25:
 380              		.align	2
 381              	.L24:
 382 004c 00000000 		.word	.LANCHOR3
 383              		.cfi_endproc
 384              	.LFE4781:
 386              		.section	.text.startup.main,"ax",%progbits
 387              		.align	1
 388              		.p2align 2,,3
 389              		.global	main
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu fpv5-d16
 395              	main:
 396              	.LFB4782:
  88:supersaw.cpp  **** int main(){
 397              		.loc 7 88 11 is_stmt 1 view -0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 24
 400              		@ frame_needed = 0, uses_anonymous_args = 0
  89:supersaw.cpp  **** 	hw.Init();
 401              		.loc 7 89 2 view .LVU96
  88:supersaw.cpp  **** int main(){
 402              		.loc 7 88 11 is_stmt 0 view .LVU97
 403 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 404              		.cfi_def_cfa_offset 36
 405              		.cfi_offset 4, -36
 406              		.cfi_offset 5, -32
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 16


 407              		.cfi_offset 6, -28
 408              		.cfi_offset 7, -24
 409              		.cfi_offset 8, -20
 410              		.cfi_offset 9, -16
 411              		.cfi_offset 10, -12
 412              		.cfi_offset 11, -8
 413              		.cfi_offset 14, -4
 414 0004 DFF83C82 		ldr	r8, .L38+68
 415              		.loc 7 89 9 view .LVU98
 416 0008 0021     		movs	r1, #0
 417 000a 7D48     		ldr	r0, .L38
 418 000c 7D4E     		ldr	r6, .L38+4
 419 000e 08F58C77 		add	r7, r8, #280
 420              	.LBB199:
 421              	.LBB200:
  23:../../libDaisy//src/daisy_seed.h **** 
  24:../../libDaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy//src/daisy_seed.h ****      */
  27:../../libDaisy//src/daisy_seed.h ****     void Configure();
  28:../../libDaisy//src/daisy_seed.h **** 
  29:../../libDaisy//src/daisy_seed.h ****     /** 
  30:../../libDaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libDaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy//src/daisy_seed.h **** 
  34:../../libDaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy//src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy//src/daisy_seed.h ****     */
  38:../../libDaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy//src/daisy_seed.h **** 
  40:../../libDaisy//src/daisy_seed.h ****     /** 
  41:../../libDaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy//src/daisy_seed.h ****     */
  43:../../libDaisy//src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy//src/daisy_seed.h **** 
  45:../../libDaisy//src/daisy_seed.h ****     /** 
  46:../../libDaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy//src/daisy_seed.h ****     */
  49:../../libDaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy//src/daisy_seed.h **** 
  51:../../libDaisy//src/daisy_seed.h ****     /** 
  52:../../libDaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy//src/daisy_seed.h ****     */
  55:../../libDaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy//src/daisy_seed.h **** 
  57:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy//src/daisy_seed.h ****     */
  61:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy//src/daisy_seed.h **** 
  63:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 17


  65:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libDaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy//src/daisy_seed.h ****     */
  68:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy//src/daisy_seed.h **** 
  70:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy//src/daisy_seed.h ****      */
  72:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy//src/daisy_seed.h **** 
  74:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy//src/daisy_seed.h ****      */
  76:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy//src/daisy_seed.h **** 
  78:../../libDaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy//src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy//src/daisy_seed.h **** 
  81:../../libDaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy//src/daisy_seed.h ****      */
  84:../../libDaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy//src/daisy_seed.h **** 
  86:../../libDaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy//src/daisy_seed.h ****      */
  88:../../libDaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy//src/daisy_seed.h **** 
  90:../../libDaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libDaisy//src/daisy_seed.h ****      */
  92:../../libDaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy//src/daisy_seed.h **** 
  94:../../libDaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy//src/daisy_seed.h **** 
  97:../../libDaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy//src/daisy_seed.h **** 
 100:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 101:../../libDaisy//src/daisy_seed.h ****      */
 102:../../libDaisy//src/daisy_seed.h ****     void SetLed(bool state);
 103:../../libDaisy//src/daisy_seed.h **** 
 104:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 105:../../libDaisy//src/daisy_seed.h ****      */
 106:../../libDaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 107:../../libDaisy//src/daisy_seed.h **** 
 108:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 109:../../libDaisy//src/daisy_seed.h ****      */
 110:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 111:../../libDaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 112:../../libDaisy//src/daisy_seed.h ****     {
 113:../../libDaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 114:../../libDaisy//src/daisy_seed.h ****     }
 115:../../libDaisy//src/daisy_seed.h **** 
 116:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 117:../../libDaisy//src/daisy_seed.h ****     */
 118:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 119:../../libDaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 120:../../libDaisy//src/daisy_seed.h ****     {
 121:../../libDaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 18


 122:../../libDaisy//src/daisy_seed.h ****     }
 123:../../libDaisy//src/daisy_seed.h **** 
 124:../../libDaisy//src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 125:../../libDaisy//src/daisy_seed.h ****     */
 126:../../libDaisy//src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 127:../../libDaisy//src/daisy_seed.h ****     {
 128:../../libDaisy//src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 422              		.loc 1 128 22 view .LVU99
 423 0012 4446     		mov	r4, r8
 424              	.LBE200:
 425              	.LBE199:
  88:supersaw.cpp  **** 	hw.Init();
 426              		.loc 7 88 11 view .LVU100
 427 0014 2DED028B 		vpush.64	{d8}
 428              		.cfi_def_cfa_offset 44
 429              		.cfi_offset 80, -44
 430              		.cfi_offset 81, -40
 431 0018 87B0     		sub	sp, sp, #28
 432              		.cfi_def_cfa_offset 72
 433              		.loc 7 89 9 view .LVU101
 434 001a FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 435              	.LVL25:
  90:supersaw.cpp  **** 	hw.StartLog();
 436              		.loc 7 90 2 is_stmt 1 view .LVU102
 437              	.LBB202:
 438              	.LBI199:
 126:../../libDaisy//src/daisy_seed.h ****     {
 439              		.loc 1 126 17 view .LVU103
 440              	.LBB201:
 441              		.loc 1 128 9 view .LVU104
 442              		.loc 1 128 22 is_stmt 0 view .LVU105
 443 001e 0020     		movs	r0, #0
 444 0020 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 445              	.LVL26:
 446              		.loc 1 128 22 view .LVU106
 447              	.LBE201:
 448              	.LBE202:
  91:supersaw.cpp  **** 	for( int i = 0; i < NUMBER_OF_SAWS; i++ ){
 449              		.loc 7 91 2 is_stmt 1 view .LVU107
 450              	.LBB203:
 451              		.loc 7 91 20 view .LVU108
 452              	.L27:
 453              	.LBB204:
  92:supersaw.cpp  **** 		superSaws[ i ].Init( SAMPLE_RATE );
 454              		.loc 7 92 3 discriminator 2 view .LVU109
 455              	.LBB205:
 456              	.LBI205:
 457              		.file 8 "../../DaisySP//Source/Synthesis/oscillator.h"
   1:../../DaisySP//Source/Synthesis/oscillator.h **** #pragma once
   2:../../DaisySP//Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../../DaisySP//Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../../DaisySP//Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../../DaisySP//Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../../DaisySP//Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../../DaisySP//Source/Synthesis/oscillator.h **** 
   8:../../DaisySP//Source/Synthesis/oscillator.h **** namespace daisysp
   9:../../DaisySP//Source/Synthesis/oscillator.h **** {
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 19


  10:../../DaisySP//Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../../DaisySP//Source/Synthesis/oscillator.h **** */
  12:../../DaisySP//Source/Synthesis/oscillator.h **** class Oscillator
  13:../../DaisySP//Source/Synthesis/oscillator.h **** {
  14:../../DaisySP//Source/Synthesis/oscillator.h ****   public:
  15:../../DaisySP//Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
  17:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  19:../../DaisySP//Source/Synthesis/oscillator.h ****     enum
  20:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  21:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../../DaisySP//Source/Synthesis/oscillator.h ****     };
  31:../../DaisySP//Source/Synthesis/oscillator.h **** 
  32:../../DaisySP//Source/Synthesis/oscillator.h **** 
  33:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../../DaisySP//Source/Synthesis/oscillator.h **** 
  35:../../DaisySP//Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../../DaisySP//Source/Synthesis/oscillator.h **** 
  37:../../DaisySP//Source/Synthesis/oscillator.h ****         Defaults:
  38:../../DaisySP//Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../../DaisySP//Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../../DaisySP//Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  42:../../DaisySP//Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
 458              		.loc 8 42 10 discriminator 2 view .LVU110
 459              	.LBB206:
  43:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  44:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
 460              		.loc 8 44 9 discriminator 2 view .LVU111
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 461              		.loc 8 47 20 is_stmt 0 discriminator 2 view .LVU112
 462 0024 4FF07C52 		mov	r2, #1056964608
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 463              		.loc 8 45 20 discriminator 2 view .LVU113
 464 0028 7749     		ldr	r1, .L38+8
  48:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 465              		.loc 8 48 20 discriminator 2 view .LVU114
 466 002a 0023     		movs	r3, #0
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 467              		.loc 8 46 20 discriminator 2 view .LVU115
 468 002c 9FED770A 		vldr.32	s0, .L38+12
  44:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 469              		.loc 8 44 20 discriminator 2 view .LVU116
 470 0030 9FED778A 		vldr.32	s16, .L38+16
  49:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 471              		.loc 8 49 34 discriminator 2 view .LVU117
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 20


 472 0034 2046     		mov	r0, r4
  47:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 473              		.loc 8 47 20 discriminator 2 view .LVU118
 474 0036 6260     		str	r2, [r4, #4]	@ float
  50:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 475              		.loc 8 51 20 discriminator 2 view .LVU119
 476 0038 0125     		movs	r5, #1
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 477              		.loc 8 45 20 discriminator 2 view .LVU120
 478 003a 2161     		str	r1, [r4, #16]	@ float
 479              	.LBE206:
 480              	.LBE205:
 481              	.LBE204:
  91:supersaw.cpp  **** 		superSaws[ i ].Init( SAMPLE_RATE );
 482              		.loc 7 91 20 discriminator 2 view .LVU121
 483 003c 2834     		adds	r4, r4, #40
 484              	.LVL27:
 485              	.LBB227:
 486              	.LBB210:
 487              	.LBB207:
  48:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 488              		.loc 8 48 20 discriminator 2 view .LVU122
 489 003e 44F8143C 		str	r3, [r4, #-20]	@ float
  44:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 490              		.loc 8 44 20 discriminator 2 view .LVU123
 491 0042 04ED078A 		vstr.32	s16, [r4, #-28]
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 492              		.loc 8 45 9 is_stmt 1 discriminator 2 view .LVU124
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 493              		.loc 8 46 9 discriminator 2 view .LVU125
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 494              		.loc 8 46 20 is_stmt 0 discriminator 2 view .LVU126
 495 0046 04ED080A 		vstr.32	s0, [r4, #-32]
  47:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 496              		.loc 8 47 9 is_stmt 1 discriminator 2 view .LVU127
  48:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 497              		.loc 8 48 9 discriminator 2 view .LVU128
  49:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 498              		.loc 8 49 9 discriminator 2 view .LVU129
  49:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 499              		.loc 8 49 34 is_stmt 0 discriminator 2 view .LVU130
 500 004a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 501              	.LVL28:
  49:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 502              		.loc 8 49 34 discriminator 2 view .LVU131
 503              	.LBE207:
 504              	.LBE210:
 505              	.LBB211:
 506              	.LBB212:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  54:../../DaisySP//Source/Synthesis/oscillator.h **** 
  55:../../DaisySP//Source/Synthesis/oscillator.h **** 
  56:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  58:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 21


  59:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = f;
  61:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
  62:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  63:../../DaisySP//Source/Synthesis/oscillator.h **** 
  64:../../DaisySP//Source/Synthesis/oscillator.h **** 
  65:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  72:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 507              		.loc 8 72 19 discriminator 2 view .LVU132
 508 004e 0623     		movs	r3, #6
 509              	.LBE212:
 510              	.LBE211:
 511              	.LBB215:
 512              	.LBB208:
  51:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 513              		.loc 8 51 20 discriminator 2 view .LVU133
 514 0050 04F8035C 		strb	r5, [r4, #-3]
 515              	.LBE208:
 516              	.LBE215:
 517              	.LBB216:
 518              	.LBB213:
 519              		.loc 8 72 19 discriminator 2 view .LVU134
 520 0054 04F8283C 		strb	r3, [r4, #-40]
 521              	.LBE213:
 522              	.LBE216:
 523              	.LBB217:
 524              	.LBB209:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 525              		.loc 8 52 20 discriminator 2 view .LVU135
 526 0058 04F8045C 		strb	r5, [r4, #-4]
  49:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 527              		.loc 8 49 20 discriminator 2 view .LVU136
 528 005c 04ED040A 		vstr.32	s0, [r4, #-16]
  50:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 529              		.loc 8 50 9 is_stmt 1 discriminator 2 view .LVU137
  51:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 530              		.loc 8 51 9 discriminator 2 view .LVU138
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 531              		.loc 8 52 9 discriminator 2 view .LVU139
 532              	.LVL29:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 533              		.loc 8 52 9 is_stmt 0 discriminator 2 view .LVU140
 534              	.LBE209:
 535              	.LBE217:
  93:supersaw.cpp  **** 		superSaws[ i ].SetWaveform( superSaws[ i ].WAVE_POLYBLEP_SAW );
 536              		.loc 7 93 3 is_stmt 1 discriminator 2 view .LVU141
 537              	.LBB218:
 538              	.LBI211:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 539              		.loc 8 70 17 discriminator 2 view .LVU142
 540              	.LBB214:
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 22


 541              		.loc 8 72 9 discriminator 2 view .LVU143
 542              		.loc 8 72 9 is_stmt 0 discriminator 2 view .LVU144
 543              	.LBE214:
 544              	.LBE218:
  94:supersaw.cpp  **** 		float randy = rand() / RAND_MAX;
 545              		.loc 7 94 3 is_stmt 1 discriminator 2 view .LVU145
 546              		.loc 7 94 21 is_stmt 0 discriminator 2 view .LVU146
 547 0060 FFF7FEFF 		bl	rand
 548              	.LVL30:
 549              		.loc 7 94 24 discriminator 2 view .LVU147
 550 0064 6B4B     		ldr	r3, .L38+20
 551              	.LBB219:
 552              	.LBB220:
  73:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  74:../../DaisySP//Source/Synthesis/oscillator.h **** 
  75:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  77:../../DaisySP//Source/Synthesis/oscillator.h ****     inline bool IsEOR() { return eor_; }
  78:../../DaisySP//Source/Synthesis/oscillator.h **** 
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  81:../../DaisySP//Source/Synthesis/oscillator.h ****     inline bool IsEOC() { return eoc_; }
  82:../../DaisySP//Source/Synthesis/oscillator.h **** 
  83:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Returns true if cycle rising.
  84:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  85:../../DaisySP//Source/Synthesis/oscillator.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:../../DaisySP//Source/Synthesis/oscillator.h **** 
  87:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Returns true if cycle falling.
  88:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  89:../../DaisySP//Source/Synthesis/oscillator.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:../../DaisySP//Source/Synthesis/oscillator.h **** 
  91:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Processes the waveform to be generated, returning one sample. This should be called once pe
  92:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  93:../../DaisySP//Source/Synthesis/oscillator.h ****     float Process();
  94:../../DaisySP//Source/Synthesis/oscillator.h **** 
  95:../../DaisySP//Source/Synthesis/oscillator.h **** 
  96:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Adds a value 0.0-1.0 (mapped to 0.0-TWO_PI) to the current phase. Useful for PM and "FM" sy
  97:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  98:../../DaisySP//Source/Synthesis/oscillator.h ****     void PhaseAdd(float _phase) { phase_ += (_phase * TWOPI_F); }
 553              		.loc 8 98 42 discriminator 2 view .LVU148
 554 0066 14ED057A 		vldr.32	s14, [r4, #-20]
 555              	.LBE220:
 556              	.LBE219:
 557              	.LBE227:
  91:supersaw.cpp  **** 		superSaws[ i ].Init( SAMPLE_RATE );
 558              		.loc 7 91 20 discriminator 2 view .LVU149
 559 006a BC42     		cmp	r4, r7
 560              	.LBB228:
 561              		.loc 7 94 24 discriminator 2 view .LVU150
 562 006c 83FB0023 		smull	r2, r3, r3, r0
 563 0070 4FEAE070 		asr	r0, r0, #31
 564              	.LBB224:
 565              	.LBB221:
 566              		.loc 8 98 42 discriminator 2 view .LVU151
 567 0074 DFED686A 		vldr.32	s13, .L38+24
 568              	.LBE221:
 569              	.LBE224:
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 23


 570              		.loc 7 94 24 discriminator 2 view .LVU152
 571 0078 C0EB6370 		rsb	r0, r0, r3, asr #29
 572              		.loc 7 94 26 discriminator 2 view .LVU153
 573 007c 07EE900A 		vmov	s15, r0	@ int
 574 0080 F8EEE77A 		vcvt.f32.s32	s15, s15
 575              	.LVL31:
  95:supersaw.cpp  **** 		phases[ i ] = randy;
 576              		.loc 7 95 3 is_stmt 1 discriminator 2 view .LVU154
 577              	.LBB225:
 578              	.LBB222:
 579              		.loc 8 98 42 is_stmt 0 discriminator 2 view .LVU155
 580 0084 A7EEA67A 		vfma.f32	s14, s15, s13
 581              	.LBE222:
 582              	.LBE225:
 583              		.loc 7 95 15 discriminator 2 view .LVU156
 584 0088 E6EC017A 		vstmia.32	r6!, {s15}
  96:supersaw.cpp  **** 		superSaws[ i ].PhaseAdd( randy );
 585              		.loc 7 96 3 is_stmt 1 discriminator 2 view .LVU157
 586              	.LVL32:
 587              	.LBB226:
 588              	.LBI219:
 589              		.loc 8 98 10 discriminator 2 view .LVU158
 590              	.LBB223:
 591              		.loc 8 98 35 discriminator 2 view .LVU159
 592              		.loc 8 98 42 is_stmt 0 discriminator 2 view .LVU160
 593 008c 04ED057A 		vstr.32	s14, [r4, #-20]
 594              	.LVL33:
 595              		.loc 8 98 42 discriminator 2 view .LVU161
 596              	.LBE223:
 597              	.LBE226:
 598              	.LBE228:
  91:supersaw.cpp  **** 		superSaws[ i ].Init( SAMPLE_RATE );
 599              		.loc 7 91 2 is_stmt 1 discriminator 2 view .LVU162
  91:supersaw.cpp  **** 		superSaws[ i ].Init( SAMPLE_RATE );
 600              		.loc 7 91 20 discriminator 2 view .LVU163
 601 0090 C8D1     		bne	.L27
 602              	.LBE203:
  97:supersaw.cpp  **** 	}
  98:supersaw.cpp  ****     hpf.Init( SAMPLE_RATE );
 603              		.loc 7 98 5 view .LVU164
 604              		.loc 7 98 13 is_stmt 0 view .LVU165
 605 0092 B0EE480A 		vmov.f32	s0, s16
 606 0096 6148     		ldr	r0, .L38+28
 607 0098 FFF7FEFF 		bl	_ZN7daisysp5ATone4InitEf
 608              	.LVL34:
  99:supersaw.cpp  **** 	float hpfFreq = ROOT_FREQ;
 609              		.loc 7 99 2 is_stmt 1 view .LVU166
 100:supersaw.cpp  **** 	hpf.SetFreq( hpfFreq );
 610              		.loc 7 100 2 view .LVU167
 611              	.LBB229:
 612              	.LBI229:
  24:../../DaisySP//Source/Filters/atone.h ****     /** Initializes the ATone module.
  25:../../DaisySP//Source/Filters/atone.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  26:../../DaisySP//Source/Filters/atone.h ****     */
  27:../../DaisySP//Source/Filters/atone.h ****     void Init(float sample_rate);
  28:../../DaisySP//Source/Filters/atone.h **** 
  29:../../DaisySP//Source/Filters/atone.h **** 
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 24


  30:../../DaisySP//Source/Filters/atone.h ****     /** Processes one sample through the filter and returns one sample.
  31:../../DaisySP//Source/Filters/atone.h ****         \param in - input signal 
  32:../../DaisySP//Source/Filters/atone.h ****     */
  33:../../DaisySP//Source/Filters/atone.h ****     float Process(float &in);
  34:../../DaisySP//Source/Filters/atone.h **** 
  35:../../DaisySP//Source/Filters/atone.h ****     /** Sets the cutoff frequency or half-way point of the filter.
  36:../../DaisySP//Source/Filters/atone.h ****         \param freq - frequency value in Hz. Range: Any positive value.
  37:../../DaisySP//Source/Filters/atone.h ****     */
  38:../../DaisySP//Source/Filters/atone.h ****     inline void SetFreq(float &freq)
 613              		.loc 6 38 17 view .LVU168
 614              	.LBB230:
  39:../../DaisySP//Source/Filters/atone.h ****     {
  40:../../DaisySP//Source/Filters/atone.h ****         freq_ = freq;
 615              		.loc 6 40 9 view .LVU169
 616              		.loc 6 40 15 is_stmt 0 view .LVU170
 617 009c 604B     		ldr	r3, .L38+32
 618 009e 5F48     		ldr	r0, .L38+28
 619 00a0 604E     		ldr	r6, .L38+36
 620 00a2 C360     		str	r3, [r0, #12]	@ float
  41:../../DaisySP//Source/Filters/atone.h ****         CalculateCoefficients();
 621              		.loc 6 41 9 is_stmt 1 view .LVU171
 622              		.loc 6 41 30 is_stmt 0 view .LVU172
 623 00a4 FFF7FEFF 		bl	_ZN7daisysp5ATone21CalculateCoefficientsEv
 624              	.LVL35:
 625              		.loc 6 41 30 view .LVU173
 626              	.LBE230:
 627              	.LBE229:
 101:supersaw.cpp  **** 	AdcChannelConfig adcConfig[ NUM_ADC_CHANNELS ];
 628              		.loc 7 101 2 is_stmt 1 view .LVU174
 102:supersaw.cpp  ****     adcConfig[ waveformKnob ].InitSingle( daisy::seed::A0 );
 629              		.loc 7 102 5 view .LVU175
 630              	.LBB231:
 631              	.LBI231:
 632              		.file 9 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 25


  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 26


  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 27


 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 28


 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 29


 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 273:../../libDaisy//src/daisy_core.h **** 
 274:../../libDaisy//src/daisy_core.h ****     /** @brief checks validity of a Pin 
 275:../../libDaisy//src/daisy_core.h ****      *  @retval returns true if the port is a valid hardware pin, otherwise false.
 276:../../libDaisy//src/daisy_core.h ****     */
 277:../../libDaisy//src/daisy_core.h ****     constexpr bool IsValid() const { return port != PORTX && pin < 16; }
 278:../../libDaisy//src/daisy_core.h **** 
 279:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking equality between Pin objects */
 280:../../libDaisy//src/daisy_core.h ****     constexpr bool operator==(const Pin &rhs) const
 281:../../libDaisy//src/daisy_core.h ****     {
 282:../../libDaisy//src/daisy_core.h ****         return (rhs.port == port) && (rhs.pin == pin);
 283:../../libDaisy//src/daisy_core.h ****     }
 284:../../libDaisy//src/daisy_core.h **** 
 285:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking inequality between Pin objects */
 286:../../libDaisy//src/daisy_core.h ****     constexpr bool operator!=(const Pin &rhs) const { return !operator==(rhs); }
 287:../../libDaisy//src/daisy_core.h **** 
 288:../../libDaisy//src/daisy_core.h ****     /** @brief conversion operation for converting to the old-style representation
 289:../../libDaisy//src/daisy_core.h ****      *         of a pin.
 290:../../libDaisy//src/daisy_core.h ****      * 
 291:../../libDaisy//src/daisy_core.h ****      *  This allows the new Pin type to be used in place of the older, dsy_gpio_pin
 292:../../libDaisy//src/daisy_core.h ****      *  type.
 293:../../libDaisy//src/daisy_core.h ****      */
 294:../../libDaisy//src/daisy_core.h ****     operator dsy_gpio_pin() const
 633              		.loc 9 294 5 view .LVU176
 634              	.LBE231:
 295:../../libDaisy//src/daisy_core.h ****     {
 296:../../libDaisy//src/daisy_core.h ****         return dsy_pin(static_cast<dsy_gpio_port>(port), pin);
 635              		.loc 9 296 9 view .LVU177
 636              	.LBB233:
 637              	.LBB232:
 638              	.LBI232:
 217:../../libDaisy//src/daisy_core.h **** {
 639              		.loc 9 217 27 view .LVU178
 640              	.LBE232:
 641              	.LBE233:
 219:../../libDaisy//src/daisy_core.h ****     p.port = port;
 642              		.loc 9 219 5 view .LVU179
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 30


 220:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 643              		.loc 9 220 5 view .LVU180
 221:../../libDaisy//src/daisy_core.h ****     return p;
 644              		.loc 9 221 5 view .LVU181
 222:../../libDaisy//src/daisy_core.h **** }
 645              		.loc 9 222 5 view .LVU182
 222:../../libDaisy//src/daisy_core.h **** }
 646              		.loc 9 222 5 is_stmt 0 view .LVU183
 647 00a8 0222     		movs	r2, #2
 648 00aa 0023     		movs	r3, #0
 649              		.loc 7 102 41 view .LVU184
 650 00ac 01A8     		add	r0, sp, #4
 651 00ae 5E4F     		ldr	r7, .L38+40
 652 00b0 8DF80020 		strb	r2, [sp]
 653 00b4 8DF80130 		strb	r3, [sp, #1]
 654              	.LVL36:
 655              		.loc 7 102 41 view .LVU185
 656 00b8 0099     		ldr	r1, [sp]
 657 00ba FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 658              	.LVL37:
 103:supersaw.cpp  **** 	hw.adc.Init( adcConfig, NUM_ADC_CHANNELS );
 659              		.loc 7 103 2 is_stmt 1 view .LVU186
 660              		.loc 7 103 13 is_stmt 0 view .LVU187
 661 00be 0423     		movs	r3, #4
 662 00c0 2A46     		mov	r2, r5
 663 00c2 5A48     		ldr	r0, .L38+44
 664 00c4 0DEB0301 		add	r1, sp, r3
 665 00c8 594C     		ldr	r4, .L38+48
 666 00ca FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 667              	.LVL38:
 104:supersaw.cpp  ****     hw.adc.Start();
 668              		.loc 7 104 5 is_stmt 1 view .LVU188
 669              		.loc 7 104 17 is_stmt 0 view .LVU189
 670 00ce 5748     		ldr	r0, .L38+44
 671 00d0 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 672              	.LVL39:
 105:supersaw.cpp  **** 	hw.SetAudioBlockSize( 4 ); // number of samples handled per callback
 673              		.loc 7 105 2 is_stmt 1 view .LVU190
 674              		.loc 7 105 22 is_stmt 0 view .LVU191
 675 00d4 0421     		movs	r1, #4
 676 00d6 4A48     		ldr	r0, .L38
 677 00d8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 678              	.LVL40:
 106:supersaw.cpp  **** 	hw.SetAudioSampleRate( SaiHandle::Config::SampleRate::SAI_48KHZ );
 679              		.loc 7 106 2 is_stmt 1 view .LVU192
 680 00dc DFF86891 		ldr	r9, .L38+72
 681              		.loc 7 106 23 is_stmt 0 view .LVU193
 682 00e0 0321     		movs	r1, #3
 683 00e2 4748     		ldr	r0, .L38
 684 00e4 534D     		ldr	r5, .L38+52
 685 00e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 686              	.LVL41:
 107:supersaw.cpp  **** 	hw.StartAudio( AudioCallback );
 687              		.loc 7 107 2 is_stmt 1 view .LVU194
 688              		.loc 7 107 15 is_stmt 0 view .LVU195
 689 00ea 5349     		ldr	r1, .L38+56
 690 00ec 4448     		ldr	r0, .L38
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 31


 691 00ee FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 692              	.LVL42:
 693              	.L34:
 108:supersaw.cpp  **** 	while( true ){
 694              		.loc 7 108 2 is_stmt 1 view .LVU196
 695              	.LBB234:
 109:supersaw.cpp  **** 		knobValue = hw.adc.GetFloat( waveformKnob );
 696              		.loc 7 109 3 view .LVU197
 697              		.loc 7 109 30 is_stmt 0 view .LVU198
 698 00f2 0021     		movs	r1, #0
 699 00f4 4D48     		ldr	r0, .L38+44
 700 00f6 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 701              	.LVL43:
 702 00fa DFF850B1 		ldr	fp, .L38+76
 703 00fe B0EE407A 		vmov.f32	s14, s0
 704              		.loc 7 109 13 view .LVU199
 705 0102 C246     		mov	r10, r8
 706 0104 86ED000A 		vstr.32	s0, [r6]
 110:supersaw.cpp  **** 		for( int i = 0; i < NUMBER_OF_SAWS; i++ ){ // ADJUST FREQUENCIES
 707              		.loc 7 110 3 is_stmt 1 view .LVU200
 708              	.LVL44:
 709              	.LBB235:
 710              		.loc 7 110 21 view .LVU201
 711 0108 01E0     		b	.L29
 712              	.LVL45:
 713              	.L37:
 714              	.LBB236:
 111:supersaw.cpp  **** 			float adjustedDetune = lookupDetune( knobValue ) * detunes[ i ] * ROOT_FREQ;
 715              		.loc 7 111 39 is_stmt 0 view .LVU202
 716 010a 96ED007A 		vldr.32	s14, [r6]
 717              	.L29:
 718              		.loc 7 111 4 is_stmt 1 discriminator 2 view .LVU203
 719              	.LVL46:
 720              	.LBB237:
 721              	.LBI237:
  70:supersaw.cpp  **** 	int knobCurveIndex = knobAmount * CURVE_POINTS;
 722              		.loc 7 70 7 discriminator 2 view .LVU204
 723              	.LBB238:
  71:supersaw.cpp  **** 	float minDetune = detuneCurve[ knobCurveIndex ];
 724              		.loc 7 71 2 discriminator 2 view .LVU205
  71:supersaw.cpp  **** 	float minDetune = detuneCurve[ knobCurveIndex ];
 725              		.loc 7 71 34 is_stmt 0 discriminator 2 view .LVU206
 726 010e F3EE017A 		vmov.f32	s15, #1.7e+1
 727              	.LBE238:
 728              	.LBE237:
 729              		.loc 7 111 66 discriminator 2 view .LVU207
 730 0112 BBEC016A 		vldmia.32	fp!, {s12}
 112:supersaw.cpp  **** 			superSaws[ i ].SetFreq( ROOT_FREQ + adjustedDetune );
 731              		.loc 7 112 26 discriminator 2 view .LVU208
 732 0116 9FED490A 		vldr.32	s0, .L38+60
 733              	.LBB240:
 734              	.LBB241:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 735              		.loc 8 61 34 discriminator 2 view .LVU209
 736 011a 5046     		mov	r0, r10
 737              	.LBE241:
 738              	.LBE240:
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 32


 739              	.LBE236:
 110:supersaw.cpp  **** 			float adjustedDetune = lookupDetune( knobValue ) * detunes[ i ] * ROOT_FREQ;
 740              		.loc 7 110 21 discriminator 2 view .LVU210
 741 011c 0AF1280A 		add	r10, r10, #40
 742              	.LBB247:
 743              	.LBB244:
 744              	.LBB239:
  71:supersaw.cpp  **** 	float minDetune = detuneCurve[ knobCurveIndex ];
 745              		.loc 7 71 34 discriminator 2 view .LVU211
 746 0120 67EE277A 		vmul.f32	s15, s14, s15
  71:supersaw.cpp  **** 	float minDetune = detuneCurve[ knobCurveIndex ];
 747              		.loc 7 71 6 discriminator 2 view .LVU212
 748 0124 FDEEE77A 		vcvt.s32.f32	s15, s15
 749 0128 17EE903A 		vmov	r3, s15	@ int
 750              	.LVL47:
  72:supersaw.cpp  **** 	float maxDetune = detuneCurve[ knobCurveIndex + 1 ];
 751              		.loc 7 72 2 is_stmt 1 discriminator 2 view .LVU213
  72:supersaw.cpp  **** 	float maxDetune = detuneCurve[ knobCurveIndex + 1 ];
 752              		.loc 7 72 8 is_stmt 0 discriminator 2 view .LVU214
 753 012c 04EB8302 		add	r2, r4, r3, lsl #2
 754 0130 D2ED007A 		vldr.32	s15, [r2]
 755              	.LVL48:
  73:supersaw.cpp  **** 	float minCurveValue = detuneCurve[ knobCurveIndex ];
 756              		.loc 7 73 2 is_stmt 1 discriminator 2 view .LVU215
  73:supersaw.cpp  **** 	float minCurveValue = detuneCurve[ knobCurveIndex ];
 757              		.loc 7 73 8 is_stmt 0 discriminator 2 view .LVU216
 758 0134 D2ED016A 		vldr.32	s13, [r2, #4]
 759              	.LVL49:
  74:supersaw.cpp  **** 	float maxCurveValue = detuneCurve[ knobCurveIndex + 1 ];
 760              		.loc 7 74 2 is_stmt 1 discriminator 2 view .LVU217
  75:supersaw.cpp  **** 	float output = minDetune + ( ( maxDetune - minDetune ) * ( ( knobAmount - minCurveValue ) / ( maxC
 761              		.loc 7 75 2 discriminator 2 view .LVU218
  76:supersaw.cpp  **** 	return output;
 762              		.loc 7 76 2 discriminator 2 view .LVU219
  76:supersaw.cpp  **** 	return output;
 763              		.loc 7 76 74 is_stmt 0 discriminator 2 view .LVU220
 764 0138 37EE677A 		vsub.f32	s14, s14, s15
  76:supersaw.cpp  **** 	return output;
 765              		.loc 7 76 110 discriminator 2 view .LVU221
 766 013c 86EEA75A 		vdiv.f32	s10, s13, s15
  76:supersaw.cpp  **** 	return output;
 767              		.loc 7 76 43 discriminator 2 view .LVU222
 768 0140 76EEE76A 		vsub.f32	s13, s13, s15
 769              	.LVL50:
  76:supersaw.cpp  **** 	return output;
 770              		.loc 7 76 92 discriminator 2 view .LVU223
 771 0144 C7EE055A 		vdiv.f32	s11, s14, s10
  76:supersaw.cpp  **** 	return output;
 772              		.loc 7 76 8 discriminator 2 view .LVU224
 773 0148 E6EEA57A 		vfma.f32	s15, s13, s11
 774              	.LVL51:
  77:supersaw.cpp  **** }
 775              		.loc 7 77 2 is_stmt 1 discriminator 2 view .LVU225
  77:supersaw.cpp  **** }
 776              		.loc 7 77 2 is_stmt 0 discriminator 2 view .LVU226
 777              	.LBE239:
 778              	.LBE244:
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 33


 779              		.loc 7 112 4 is_stmt 1 discriminator 2 view .LVU227
 111:supersaw.cpp  **** 			superSaws[ i ].SetFreq( ROOT_FREQ + adjustedDetune );
 780              		.loc 7 111 53 is_stmt 0 discriminator 2 view .LVU228
 781 014c 66EE277A 		vmul.f32	s15, s12, s15
 782              	.LVL52:
 783              		.loc 7 112 26 discriminator 2 view .LVU229
 784 0150 A7EE800A 		vfma.f32	s0, s15, s0
 785              	.LVL53:
 786              	.LBB245:
 787              	.LBI240:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 788              		.loc 8 58 17 is_stmt 1 discriminator 2 view .LVU230
 789              	.LBB242:
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 790              		.loc 8 60 9 discriminator 2 view .LVU231
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 791              		.loc 8 60 20 is_stmt 0 discriminator 2 view .LVU232
 792 0154 0AED080A 		vstr.32	s0, [r10, #-32]
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 793              		.loc 8 61 9 is_stmt 1 discriminator 2 view .LVU233
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 794              		.loc 8 61 34 is_stmt 0 discriminator 2 view .LVU234
 795 0158 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 796              	.LVL54:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 797              		.loc 8 61 34 discriminator 2 view .LVU235
 798              	.LBE242:
 799              	.LBE245:
 800              	.LBE247:
 110:supersaw.cpp  **** 			float adjustedDetune = lookupDetune( knobValue ) * detunes[ i ] * ROOT_FREQ;
 801              		.loc 7 110 21 discriminator 2 view .LVU236
 802 015c 5F45     		cmp	r7, fp
 803              	.LBB248:
 804              	.LBB246:
 805              	.LBB243:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 806              		.loc 8 61 20 discriminator 2 view .LVU237
 807 015e 0AED040A 		vstr.32	s0, [r10, #-16]
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 808              		.loc 8 61 20 discriminator 2 view .LVU238
 809              	.LBE243:
 810              	.LBE246:
 811              	.LBE248:
 110:supersaw.cpp  **** 			float adjustedDetune = lookupDetune( knobValue ) * detunes[ i ] * ROOT_FREQ;
 812              		.loc 7 110 3 is_stmt 1 discriminator 2 view .LVU239
 110:supersaw.cpp  **** 			float adjustedDetune = lookupDetune( knobValue ) * detunes[ i ] * ROOT_FREQ;
 813              		.loc 7 110 21 discriminator 2 view .LVU240
 814 0162 D2D1     		bne	.L37
 815              	.LBE235:
 816              	.LBB249:
 113:supersaw.cpp  **** 		}
 114:supersaw.cpp  **** 		for( int i = 0; i < NUMBER_OF_SAWS; i++ ){ // ADJUST AMPLITUDES
 115:supersaw.cpp  **** 			if( i == 3 ) superSaws[ i ].SetAmp( 1.0 - fmap( knobValue, 0.0, mixAmounts[ i ] ) );
 817              		.loc 7 115 50 is_stmt 0 view .LVU241
 818 0164 99ED033A 		vldr.32	s6, [r9, #12]
 819 0168 4046     		mov	r0, r8
 820 016a DFF8DC90 		ldr	r9, .L38+72
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 34


 821 016e 0122     		movs	r2, #1
 116:supersaw.cpp  **** 			else superSaws[ i ].SetAmp( lookupAmp( knobValue ) * mixAmounts[ i ] );
 822              		.loc 7 116 41 view .LVU242
 823 0170 D6ED004A 		vldr.32	s9, [r6]
 824 0174 4946     		mov	r1, r9
 825 0176 28E0     		b	.L33
 826              	.LVL55:
 827              	.L30:
 828              	.LBB250:
 829              	.LBB251:
  80:supersaw.cpp  **** 	float minAmp = ampCurve[ knobCurveIndex  ]; // [0.0...~0.6]
 830              		.loc 7 80 34 view .LVU243
 831 0178 64EE877A 		vmul.f32	s15, s9, s14
 832              	.LBE251:
 833              	.LBE250:
 834              		.loc 7 116 30 view .LVU244
 835 017c 91ED006A 		vldr.32	s12, [r1]
 114:supersaw.cpp  **** 			if( i == 3 ) superSaws[ i ].SetAmp( 1.0 - fmap( knobValue, 0.0, mixAmounts[ i ] ) );
 836              		.loc 7 114 21 view .LVU245
 837 0180 072A     		cmp	r2, #7
 838              	.LBB255:
 839              	.LBB252:
  80:supersaw.cpp  **** 	float minAmp = ampCurve[ knobCurveIndex  ]; // [0.0...~0.6]
 840              		.loc 7 80 6 view .LVU246
 841 0182 FDEEE77A 		vcvt.s32.f32	s15, s15
  83:supersaw.cpp  **** 	float maxCurveValue = ( ( float )knobCurveIndex + 1 ) / CURVE_POINTS;
 842              		.loc 7 83 24 view .LVU247
 843 0186 F8EEE75A 		vcvt.f32.s32	s11, s15
  80:supersaw.cpp  **** 	float minAmp = ampCurve[ knobCurveIndex  ]; // [0.0...~0.6]
 844              		.loc 7 80 6 view .LVU248
 845 018a 17EE903A 		vmov	r3, s15	@ int
 846              	.LVL56:
  81:supersaw.cpp  **** 	float maxAmp = ampCurve[ knobCurveIndex + 1]; // [0.0...~0.6]
 847              		.loc 7 81 2 is_stmt 1 view .LVU249
  81:supersaw.cpp  **** 	float maxAmp = ampCurve[ knobCurveIndex + 1]; // [0.0...~0.6]
 848              		.loc 7 81 8 is_stmt 0 view .LVU250
 849 018e 05EB830C 		add	ip, r5, r3, lsl #2
  84:supersaw.cpp  **** 	float output = minAmp + ( ( maxAmp - minAmp ) * ( ( knobAmount - minCurveValue ) / ( maxCurveValue
 850              		.loc 7 84 50 view .LVU251
 851 0192 75EEA66A 		vadd.f32	s13, s11, s13
  83:supersaw.cpp  **** 	float maxCurveValue = ( ( float )knobCurveIndex + 1 ) / CURVE_POINTS;
 852              		.loc 7 83 8 view .LVU252
 853 0196 85EE875A 		vdiv.f32	s10, s11, s14
  81:supersaw.cpp  **** 	float maxAmp = ampCurve[ knobCurveIndex + 1]; // [0.0...~0.6]
 854              		.loc 7 81 8 view .LVU253
 855 019a DCED007A 		vldr.32	s15, [ip]
 856              	.LVL57:
  82:supersaw.cpp  **** 	float minCurveValue = ( float )knobCurveIndex / CURVE_POINTS;
 857              		.loc 7 82 2 is_stmt 1 view .LVU254
  83:supersaw.cpp  **** 	float maxCurveValue = ( ( float )knobCurveIndex + 1 ) / CURVE_POINTS;
 858              		.loc 7 83 2 view .LVU255
  84:supersaw.cpp  **** 	float output = minAmp + ( ( maxAmp - minAmp ) * ( ( knobAmount - minCurveValue ) / ( maxCurveValue
 859              		.loc 7 84 2 view .LVU256
  85:supersaw.cpp  **** 	return output;
 860              		.loc 7 85 2 view .LVU257
  85:supersaw.cpp  **** 	return output;
 861              		.loc 7 85 37 is_stmt 0 view .LVU258
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 35


 862 019e DCED015A 		vldr.32	s11, [ip, #4]
 863              	.LVL58:
  84:supersaw.cpp  **** 	float output = minAmp + ( ( maxAmp - minAmp ) * ( ( knobAmount - minCurveValue ) / ( maxCurveValue
 864              		.loc 7 84 8 view .LVU259
 865 01a2 C6EE873A 		vdiv.f32	s7, s13, s14
  85:supersaw.cpp  **** 	return output;
 866              		.loc 7 85 37 view .LVU260
 867 01a6 35EEE77A 		vsub.f32	s14, s11, s15
  85:supersaw.cpp  **** 	return output;
 868              		.loc 7 85 65 view .LVU261
 869 01aa 34EEC54A 		vsub.f32	s8, s9, s10
  85:supersaw.cpp  **** 	return output;
 870              		.loc 7 85 101 view .LVU262
 871 01ae C3EE855A 		vdiv.f32	s11, s7, s10
  85:supersaw.cpp  **** 	return output;
 872              		.loc 7 85 83 view .LVU263
 873 01b2 C4EE256A 		vdiv.f32	s13, s8, s11
  85:supersaw.cpp  **** 	return output;
 874              		.loc 7 85 8 view .LVU264
 875 01b6 E7EE267A 		vfma.f32	s15, s14, s13
 876              	.LVL59:
  86:supersaw.cpp  **** }
 877              		.loc 7 86 2 is_stmt 1 view .LVU265
  86:supersaw.cpp  **** }
 878              		.loc 7 86 2 is_stmt 0 view .LVU266
 879              	.LBE252:
 880              	.LBE255:
 881              	.LBB256:
 882              	.LBI256:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 883              		.loc 8 67 17 is_stmt 1 view .LVU267
 884              	.LBB257:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 885              		.loc 8 67 41 view .LVU268
 886              	.LBE257:
 887              	.LBE256:
 888              		.loc 7 116 30 is_stmt 0 view .LVU269
 889 01ba 66EE277A 		vmul.f32	s15, s12, s15
 890              	.LVL60:
 891              	.LBB259:
 892              	.LBB258:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 893              		.loc 8 67 46 view .LVU270
 894 01be C0ED017A 		vstr.32	s15, [r0, #4]
 895              	.LVL61:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 896              		.loc 8 67 46 view .LVU271
 897              	.LBE258:
 898              	.LBE259:
 114:supersaw.cpp  **** 			if( i == 3 ) superSaws[ i ].SetAmp( 1.0 - fmap( knobValue, 0.0, mixAmounts[ i ] ) );
 899              		.loc 7 114 3 is_stmt 1 view .LVU272
 114:supersaw.cpp  **** 			if( i == 3 ) superSaws[ i ].SetAmp( 1.0 - fmap( knobValue, 0.0, mixAmounts[ i ] ) );
 900              		.loc 7 114 21 view .LVU273
 901 01c2 19D0     		beq	.L32
 902              	.LVL62:
 903              	.L31:
 114:supersaw.cpp  **** 			if( i == 3 ) superSaws[ i ].SetAmp( 1.0 - fmap( knobValue, 0.0, mixAmounts[ i ] ) );
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 36


 904              		.loc 7 114 21 is_stmt 0 view .LVU274
 905 01c4 0132     		adds	r2, r2, #1
 906 01c6 0431     		adds	r1, r1, #4
 907 01c8 2830     		adds	r0, r0, #40
 908              	.L33:
 909              	.LVL63:
 115:supersaw.cpp  **** 			else superSaws[ i ].SetAmp( lookupAmp( knobValue ) * mixAmounts[ i ] );
 910              		.loc 7 115 4 is_stmt 1 view .LVU275
 911              		.loc 7 116 9 view .LVU276
 912              	.LBB260:
 913              	.LBI250:
  79:supersaw.cpp  **** 	int knobCurveIndex = knobAmount * CURVE_POINTS; // [0...15]
 914              		.loc 7 79 7 view .LVU277
 915              	.LBB253:
  80:supersaw.cpp  **** 	float minAmp = ampCurve[ knobCurveIndex  ]; // [0.0...~0.6]
 916              		.loc 7 80 2 view .LVU278
 917              	.LBE253:
 918              	.LBE260:
 115:supersaw.cpp  **** 			else superSaws[ i ].SetAmp( lookupAmp( knobValue ) * mixAmounts[ i ] );
 919              		.loc 7 115 4 is_stmt 0 view .LVU279
 920 01ca 042A     		cmp	r2, #4
 921              	.LBB261:
 922              	.LBB254:
  80:supersaw.cpp  **** 	float minAmp = ampCurve[ knobCurveIndex  ]; // [0.0...~0.6]
 923              		.loc 7 80 34 view .LVU280
 924 01cc B3EE017A 		vmov.f32	s14, #1.7e+1
  84:supersaw.cpp  **** 	float output = minAmp + ( ( maxAmp - minAmp ) * ( ( knobAmount - minCurveValue ) / ( maxCurveValue
 925              		.loc 7 84 50 view .LVU281
 926 01d0 F7EE006A 		vmov.f32	s13, #1.0e+0
 927              	.LBE254:
 928              	.LBE261:
 115:supersaw.cpp  **** 			else superSaws[ i ].SetAmp( lookupAmp( knobValue ) * mixAmounts[ i ] );
 929              		.loc 7 115 4 view .LVU282
 930 01d4 D0D1     		bne	.L30
 115:supersaw.cpp  **** 			else superSaws[ i ].SetAmp( lookupAmp( knobValue ) * mixAmounts[ i ] );
 931              		.loc 7 115 17 is_stmt 1 discriminator 1 view .LVU283
 932              	.LVL64:
 933              	.LBB262:
 934              	.LBI262:
 935              		.file 10 "../../DaisySP//Source/Utility/dsp.h"
   1:../../DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../../DaisySP//Source/Utility/dsp.h **** */
   3:../../DaisySP//Source/Utility/dsp.h **** #pragma once
   4:../../DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../../DaisySP//Source/Utility/dsp.h **** #include <cassert>
   7:../../DaisySP//Source/Utility/dsp.h **** #include <cstdint>
   8:../../DaisySP//Source/Utility/dsp.h **** #include <random>
   9:../../DaisySP//Source/Utility/dsp.h **** #include <cmath>
  10:../../DaisySP//Source/Utility/dsp.h **** 
  11:../../DaisySP//Source/Utility/dsp.h **** /** PIs
  12:../../DaisySP//Source/Utility/dsp.h **** */
  13:../../DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../../DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../../DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 37


  18:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../../DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../../DaisySP//Source/Utility/dsp.h **** 
  21:../../DaisySP//Source/Utility/dsp.h **** namespace daisysp
  22:../../DaisySP//Source/Utility/dsp.h **** {
  23:../../DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../../DaisySP//Source/Utility/dsp.h **** 
  26:../../DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../../DaisySP//Source/Utility/dsp.h **** 
  29:../../DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../../DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  31:../../DaisySP//Source/Utility/dsp.h **** */
  32:../../DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../../DaisySP//Source/Utility/dsp.h **** {
  34:../../DaisySP//Source/Utility/dsp.h ****     float r;
  35:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  36:../../DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../../DaisySP//Source/Utility/dsp.h **** #else
  38:../../DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  40:../../DaisySP//Source/Utility/dsp.h ****     return r;
  41:../../DaisySP//Source/Utility/dsp.h **** }
  42:../../DaisySP//Source/Utility/dsp.h **** 
  43:../../DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../../DaisySP//Source/Utility/dsp.h **** {
  45:../../DaisySP//Source/Utility/dsp.h ****     float r;
  46:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  47:../../DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../../DaisySP//Source/Utility/dsp.h **** #else
  49:../../DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  51:../../DaisySP//Source/Utility/dsp.h ****     return r;
  52:../../DaisySP//Source/Utility/dsp.h **** }
  53:../../DaisySP//Source/Utility/dsp.h **** 
  54:../../DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  55:../../DaisySP//Source/Utility/dsp.h **** */
  56:../../DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../../DaisySP//Source/Utility/dsp.h **** {
  58:../../DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../../DaisySP//Source/Utility/dsp.h **** }
  60:../../DaisySP//Source/Utility/dsp.h **** 
  61:../../DaisySP//Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../../DaisySP//Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../../DaisySP//Source/Utility/dsp.h **** These are approximations
  64:../../DaisySP//Source/Utility/dsp.h **** */
  65:../../DaisySP//Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../../DaisySP//Source/Utility/dsp.h **** {
  67:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  68:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  70:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../../DaisySP//Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  74:../../DaisySP//Source/Utility/dsp.h ****     return f;
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 38


  75:../../DaisySP//Source/Utility/dsp.h **** }
  76:../../DaisySP//Source/Utility/dsp.h **** 
  77:../../DaisySP//Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../../DaisySP//Source/Utility/dsp.h **** {
  79:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  80:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  82:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../../DaisySP//Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  86:../../DaisySP//Source/Utility/dsp.h ****     return f;
  87:../../DaisySP//Source/Utility/dsp.h **** }
  88:../../DaisySP//Source/Utility/dsp.h **** 
  89:../../DaisySP//Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../../DaisySP//Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../../DaisySP//Source/Utility/dsp.h **** */
  92:../../DaisySP//Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../../DaisySP//Source/Utility/dsp.h **** {
  94:../../DaisySP//Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../../DaisySP//Source/Utility/dsp.h **** }
  96:../../DaisySP//Source/Utility/dsp.h **** 
  97:../../DaisySP//Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../../DaisySP//Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../../DaisySP//Source/Utility/dsp.h **** */
 100:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../../DaisySP//Source/Utility/dsp.h **** {
 102:../../DaisySP//Source/Utility/dsp.h ****     float frac;
 103:../../DaisySP//Source/Utility/dsp.h ****     int   exp;
 104:../../DaisySP//Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../../DaisySP//Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 107:../../DaisySP//Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 109:../../DaisySP//Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 111:../../DaisySP//Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../../DaisySP//Source/Utility/dsp.h ****     f += exp;
 113:../../DaisySP//Source/Utility/dsp.h ****     return (f);
 114:../../DaisySP//Source/Utility/dsp.h **** }
 115:../../DaisySP//Source/Utility/dsp.h **** 
 116:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../../DaisySP//Source/Utility/dsp.h **** {
 118:../../DaisySP//Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../../DaisySP//Source/Utility/dsp.h **** }
 120:../../DaisySP//Source/Utility/dsp.h **** 
 121:../../DaisySP//Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../../DaisySP//Source/Utility/dsp.h **** */
 123:../../DaisySP//Source/Utility/dsp.h **** inline float mtof(float m)
 124:../../DaisySP//Source/Utility/dsp.h **** {
 125:../../DaisySP//Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../../DaisySP//Source/Utility/dsp.h **** }
 127:../../DaisySP//Source/Utility/dsp.h **** 
 128:../../DaisySP//Source/Utility/dsp.h **** 
 129:../../DaisySP//Source/Utility/dsp.h **** /** one pole lpf
 130:../../DaisySP//Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../../DaisySP//Source/Utility/dsp.h **** calls to properly filter the signal
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 39


 132:../../DaisySP//Source/Utility/dsp.h **** coeff can be calculated:
 133:../../DaisySP//Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../../DaisySP//Source/Utility/dsp.h **** */
 135:../../DaisySP//Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 136:../../DaisySP//Source/Utility/dsp.h **** {
 137:../../DaisySP//Source/Utility/dsp.h ****     out += coeff * (in - out);
 138:../../DaisySP//Source/Utility/dsp.h **** }
 139:../../DaisySP//Source/Utility/dsp.h **** 
 140:../../DaisySP//Source/Utility/dsp.h **** /** Curves to use with the fmap function */
 141:../../DaisySP//Source/Utility/dsp.h **** enum class Mapping
 142:../../DaisySP//Source/Utility/dsp.h **** {
 143:../../DaisySP//Source/Utility/dsp.h ****     LINEAR,
 144:../../DaisySP//Source/Utility/dsp.h ****     EXP,
 145:../../DaisySP//Source/Utility/dsp.h ****     LOG,
 146:../../DaisySP//Source/Utility/dsp.h **** };
 147:../../DaisySP//Source/Utility/dsp.h **** 
 148:../../DaisySP//Source/Utility/dsp.h **** /** Maps a float between a specified range, using a specified curve. 
 149:../../DaisySP//Source/Utility/dsp.h ****  * 
 150:../../DaisySP//Source/Utility/dsp.h ****  *  \param in a value between 0 to 1 that will be mapped to the new range.
 151:../../DaisySP//Source/Utility/dsp.h ****  *  \param min the new minimum value
 152:../../DaisySP//Source/Utility/dsp.h ****  *  \param max the new maxmimum value
 153:../../DaisySP//Source/Utility/dsp.h ****  *  \param curve a Mapping Value to adjust the response curve of the transformation
 154:../../DaisySP//Source/Utility/dsp.h ****  *               defaults to Linear. @see Mapping
 155:../../DaisySP//Source/Utility/dsp.h ****  * 
 156:../../DaisySP//Source/Utility/dsp.h ****  *  When using the log curve min and max, must be greater than zero.
 157:../../DaisySP//Source/Utility/dsp.h ****  * 
 158:../../DaisySP//Source/Utility/dsp.h ****  *  \retval returns the transformed float within the new range.
 159:../../DaisySP//Source/Utility/dsp.h **** */
 160:../../DaisySP//Source/Utility/dsp.h **** inline float
 161:../../DaisySP//Source/Utility/dsp.h **** fmap(float in, float min, float max, Mapping curve = Mapping::LINEAR)
 936              		.loc 10 161 1 discriminator 1 view .LVU284
 937              	.LBE262:
 938              	.LBE249:
 939              	.LBE234:
 162:../../DaisySP//Source/Utility/dsp.h **** {
 163:../../DaisySP//Source/Utility/dsp.h ****     switch(curve)
 940              		.loc 10 163 5 discriminator 1 view .LVU285
 941              	.LBB281:
 942              	.LBB279:
 943              	.LBB272:
 944              	.LBB263:
 164:../../DaisySP//Source/Utility/dsp.h ****     {
 165:../../DaisySP//Source/Utility/dsp.h ****         case Mapping::EXP:
 166:../../DaisySP//Source/Utility/dsp.h ****             return fclamp(min + (in * in) * (max - min), min, max);
 167:../../DaisySP//Source/Utility/dsp.h ****         case Mapping::LOG:
 168:../../DaisySP//Source/Utility/dsp.h ****         {
 169:../../DaisySP//Source/Utility/dsp.h ****             const float a = 1.f / log10f(max / min);
 170:../../DaisySP//Source/Utility/dsp.h ****             return fclamp(min * powf(10, in / a), min, max);
 171:../../DaisySP//Source/Utility/dsp.h ****         }
 172:../../DaisySP//Source/Utility/dsp.h ****         case Mapping::LINEAR:
 945              		.loc 10 172 9 discriminator 1 view .LVU286
 173:../../DaisySP//Source/Utility/dsp.h ****         default: return fclamp(min + in * (max - min), min, max);
 946              		.loc 10 173 9 discriminator 1 view .LVU287
 947              		.loc 10 173 18 discriminator 1 view .LVU288
 948              	.LBE263:
 949              	.LBE272:
 950              	.LBB273:
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 40


 951              	.LBB274:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 952              		.loc 8 67 46 is_stmt 0 discriminator 1 view .LVU289
 953 01d6 B0EE667A 		vmov.f32	s14, s13
 954              	.LBE274:
 955              	.LBE273:
 956              	.LBB276:
 957              	.LBB270:
 958              		.loc 10 173 31 discriminator 1 view .LVU290
 959 01da DFED196A 		vldr.32	s13, .L38+64
 960 01de F0EE667A 		vmov.f32	s15, s13
 961 01e2 E3EE247A 		vfma.f32	s15, s6, s9
 962              	.LVL65:
 963              	.LBB264:
 964              	.LBI264:
  56:../../DaisySP//Source/Utility/dsp.h **** {
 965              		.loc 10 56 14 is_stmt 1 discriminator 1 view .LVU291
 966              	.LBE264:
 967              	.LBE270:
 968              	.LBE276:
 969              	.LBE279:
 970              	.LBE281:
  58:../../DaisySP//Source/Utility/dsp.h **** }
 971              		.loc 10 58 5 discriminator 1 view .LVU292
 972              	.LBB282:
 973              	.LBB280:
 974              	.LBB277:
 975              	.LBB271:
 976              	.LBB269:
 977              	.LBB265:
 978              	.LBI265:
  32:../../DaisySP//Source/Utility/dsp.h **** {
 979              		.loc 10 32 14 discriminator 1 view .LVU293
 980              	.LBB266:
  34:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
 981              		.loc 10 34 5 discriminator 1 view .LVU294
  36:../../DaisySP//Source/Utility/dsp.h **** #else
 982              		.loc 10 36 5 discriminator 1 view .LVU295
 983              		.syntax unified
 984              	@ 36 "../../DaisySP//Source/Utility/dsp.h" 1
 985 01e6 C7FEA67A 		vmaxnm.f32 s15, s15, s13
 986              	@ 0 "" 2
 987              	.LVL66:
  40:../../DaisySP//Source/Utility/dsp.h **** }
 988              		.loc 10 40 5 discriminator 1 view .LVU296
  40:../../DaisySP//Source/Utility/dsp.h **** }
 989              		.loc 10 40 5 is_stmt 0 discriminator 1 view .LVU297
 990              		.thumb
 991              		.syntax unified
 992              	.LBE266:
 993              	.LBE265:
 994              	.LBB267:
 995              	.LBI267:
  43:../../DaisySP//Source/Utility/dsp.h **** {
 996              		.loc 10 43 14 is_stmt 1 discriminator 1 view .LVU298
 997              	.LBB268:
  45:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 41


 998              		.loc 10 45 5 discriminator 1 view .LVU299
  47:../../DaisySP//Source/Utility/dsp.h **** #else
 999              		.loc 10 47 5 discriminator 1 view .LVU300
 1000              		.syntax unified
 1001              	@ 47 "../../DaisySP//Source/Utility/dsp.h" 1
 1002 01ea C7FEC37A 		vminnm.f32 s15, s15, s6
 1003              	@ 0 "" 2
 1004              	.LVL67:
  51:../../DaisySP//Source/Utility/dsp.h **** }
 1005              		.loc 10 51 5 discriminator 1 view .LVU301
  51:../../DaisySP//Source/Utility/dsp.h **** }
 1006              		.loc 10 51 5 is_stmt 0 discriminator 1 view .LVU302
 1007              		.thumb
 1008              		.syntax unified
 1009              	.LBE268:
 1010              	.LBE267:
 1011              	.LBE269:
 1012              	.LBE271:
 1013              	.LBE277:
 1014              	.LBB278:
 1015              	.LBI273:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1016              		.loc 8 67 17 is_stmt 1 discriminator 1 view .LVU303
 1017              	.LBB275:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1018              		.loc 8 67 41 discriminator 1 view .LVU304
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1019              		.loc 8 67 46 is_stmt 0 discriminator 1 view .LVU305
 1020 01ee 77EE677A 		vsub.f32	s15, s14, s15
 1021              	.LVL68:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1022              		.loc 8 67 46 discriminator 1 view .LVU306
 1023 01f2 C8ED1F7A 		vstr.32	s15, [r8, #124]
 1024              	.LVL69:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1025              		.loc 8 67 46 discriminator 1 view .LVU307
 1026              	.LBE275:
 1027              	.LBE278:
 114:supersaw.cpp  **** 			if( i == 3 ) superSaws[ i ].SetAmp( 1.0 - fmap( knobValue, 0.0, mixAmounts[ i ] ) );
 1028              		.loc 7 114 3 is_stmt 1 discriminator 1 view .LVU308
 114:supersaw.cpp  **** 			if( i == 3 ) superSaws[ i ].SetAmp( 1.0 - fmap( knobValue, 0.0, mixAmounts[ i ] ) );
 1029              		.loc 7 114 21 discriminator 1 view .LVU309
 1030 01f6 E5E7     		b	.L31
 1031              	.LVL70:
 1032              	.L32:
 114:supersaw.cpp  **** 			if( i == 3 ) superSaws[ i ].SetAmp( 1.0 - fmap( knobValue, 0.0, mixAmounts[ i ] ) );
 1033              		.loc 7 114 21 is_stmt 0 discriminator 1 view .LVU310
 1034              	.LBE280:
 117:supersaw.cpp  **** 		}
 118:supersaw.cpp  **** 		System::Delay( 1 );
 1035              		.loc 7 118 3 is_stmt 1 view .LVU311
 1036              		.loc 7 118 16 is_stmt 0 view .LVU312
 1037 01f8 0120     		movs	r0, #1
 1038 01fa FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 1039              	.LVL71:
 1040              		.loc 7 118 16 view .LVU313
 1041              	.LBE282:
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 42


 108:supersaw.cpp  **** 		knobValue = hw.adc.GetFloat( waveformKnob );
 1042              		.loc 7 108 2 is_stmt 1 view .LVU314
 119:supersaw.cpp  **** 	}
 1043              		.loc 7 119 2 is_stmt 0 view .LVU315
 1044 01fe 78E7     		b	.L34
 1045              	.L39:
 1046              		.align	2
 1047              	.L38:
 1048 0200 00000000 		.word	.LANCHOR4
 1049 0204 00000000 		.word	.LANCHOR5
 1050 0208 3EC3AE37 		.word	934200126
 1051 020c 0000C842 		.word	1120403456
 1052 0210 00803B47 		.word	1195081728
 1053 0214 01000040 		.word	1073741825
 1054 0218 DB0FC940 		.word	1086918619
 1055 021c 00000000 		.word	.LANCHOR1
 1056 0220 0000DC42 		.word	1121714176
 1057 0224 00000000 		.word	.LANCHOR6
 1058 0228 1C000000 		.word	.LANCHOR7+28
 1059 022c 18000000 		.word	.LANCHOR4+24
 1060 0230 00000000 		.word	.LANCHOR2
 1061 0234 00000000 		.word	.LANCHOR3
 1062 0238 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 1063 023c 0000DC42 		.word	1121714176
 1064 0240 00000000 		.word	0
 1065 0244 00000000 		.word	.LANCHOR0
 1066 0248 00000000 		.word	.LANCHOR8
 1067 024c 00000000 		.word	.LANCHOR7
 1068              		.cfi_endproc
 1069              	.LFE4782:
 1071              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 1072              		.align	1
 1073              		.p2align 2,,3
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1077              		.fpu fpv5-d16
 1079              	_GLOBAL__sub_I_hw:
 1080              	.LFB5343:
 120:supersaw.cpp  **** }...
 1081              		.loc 7 120 1 is_stmt 1 view -0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 0
 1084              		@ frame_needed = 0, uses_anonymous_args = 0
 1085              	.LBB304:
 1086              	.LBI304:
 1087              		.loc 7 120 1 view .LVU317
 1088              	.LVL72:
 1089              	.LBB305:
 1090              	.LBB306:
 1091              	.LBI306:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 1092              		.loc 1 21 5 view .LVU318
 1093              	.LBB307:
 1094              	.LBB308:
 1095              	.LBI308:
 1096              		.file 11 "../../libDaisy//src/per/qspi.h"
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 43


   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 44


  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 45


 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 1097              		.loc 11 166 5 view .LVU319
 1098              	.LBE308:
 1099              	.LBE307:
 1100              	.LBE306:
 1101              	.LBE305:
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 46


 1102              	.LBE304:
 1103              		.loc 7 120 1 is_stmt 0 view .LVU320
 1104 0000 10B5     		push	{r4, lr}
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 4, -8
 1107              		.cfi_offset 14, -4
 1108              	.LBB331:
 1109              	.LBB329:
 1110              	.LBB326:
 1111              	.LBB324:
 1112              	.LBB313:
 1113              	.LBB309:
 1114              	.LBB310:
 1115              		.loc 11 166 34 view .LVU321
 1116 0002 0A48     		ldr	r0, .L42
 1117 0004 0024     		movs	r4, #0
 1118              	.LBE310:
 1119              	.LBE309:
 1120              	.LBE313:
 1121              	.LBE324:
 1122              	.LBE326:
   9:supersaw.cpp  **** DaisySeed hw;
 1123              		.loc 7 9 11 view .LVU322
 1124 0006 0A4A     		ldr	r2, .L42+4
 1125 0008 0A49     		ldr	r1, .L42+8
 1126              	.LBB327:
 1127              	.LBB325:
 1128              	.LBB314:
 1129              	.LBB312:
 1130              	.LBB311:
 1131              		.loc 11 166 34 view .LVU323
 1132 000a 0460     		str	r4, [r0]
 1133              	.LVL73:
 1134              		.loc 11 166 34 view .LVU324
 1135              	.LBE311:
 1136              	.LBE312:
 1137              	.LBE314:
 1138              	.LBB315:
 1139              	.LBI315:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1140              		.loc 5 95 5 is_stmt 1 view .LVU325
 1141              	.LBB316:
 1142              	.LBB317:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1143              		.loc 5 95 35 is_stmt 0 view .LVU326
 1144 000c 4461     		str	r4, [r0, #20]
 1145              	.LVL74:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1146              		.loc 5 95 35 view .LVU327
 1147              	.LBE317:
 1148              	.LBE316:
 1149              	.LBE315:
 1150              	.LBB318:
 1151              	.LBI318:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1152              		.loc 4 92 5 is_stmt 1 view .LVU328
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 47


 1153              		.loc 4 92 5 is_stmt 0 view .LVU329
 1154              	.LBE318:
 1155              	.LBB319:
 1156              	.LBI319:
 1157              		.file 12 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 48


  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 1158              		.loc 12 84 5 is_stmt 1 view .LVU330
 1159              	.LBB320:
 1160              	.LBB321:
 1161              		.loc 12 84 33 is_stmt 0 view .LVU331
 1162 000e 0462     		str	r4, [r0, #32]
 1163              	.LVL75:
 1164              		.loc 12 84 33 view .LVU332
 1165              	.LBE321:
 1166              	.LBE320:
 1167              	.LBE319:
 1168              	.LBB322:
 1169              	.LBI322:
  40:../../libDaisy//src/hid/usb.h **** 
 1170              		.loc 3 40 5 is_stmt 1 view .LVU333
  40:../../libDaisy//src/hid/usb.h **** 
 1171              		.loc 3 40 5 is_stmt 0 view .LVU334
 1172              	.LBE322:
 1173              	.LBB323:
 1174              	.LBI323:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1175              		.loc 2 77 5 is_stmt 1 view .LVU335
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1176              		.loc 2 77 5 is_stmt 0 view .LVU336
 1177              	.LBE323:
 1178              	.LBE325:
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 49


 1179              	.LBE327:
   9:supersaw.cpp  **** DaisySeed hw;
 1180              		.loc 7 9 11 view .LVU337
 1181 0010 FFF7FEFF 		bl	__aeabi_atexit
 1182              	.LVL76:
  10:supersaw.cpp  **** Oscillator superSaws[ NUMBER_OF_SAWS ];
 1183              		.loc 7 10 38 is_stmt 1 view .LVU338
  10:supersaw.cpp  **** Oscillator superSaws[ NUMBER_OF_SAWS ];
 1184              		.loc 7 10 12 is_stmt 0 view .LVU339
 1185 0014 064A     		ldr	r2, .L42+4
 1186 0016 0849     		ldr	r1, .L42+12
 1187 0018 2046     		mov	r0, r4
 1188 001a FFF7FEFF 		bl	__aeabi_atexit
 1189              	.LVL77:
 1190              	.LBB328:
 1191              	.LBI328:
  22:../../DaisySP//Source/Filters/atone.h ****     ~ATone() {}
 1192              		.loc 6 22 5 is_stmt 1 view .LVU340
  22:../../DaisySP//Source/Filters/atone.h ****     ~ATone() {}
 1193              		.loc 6 22 5 is_stmt 0 view .LVU341
 1194              	.LBE328:
  11:supersaw.cpp  **** ATone hpf;
 1195              		.loc 7 11 7 view .LVU342
 1196 001e 044A     		ldr	r2, .L42+4
 1197 0020 0649     		ldr	r1, .L42+16
 1198 0022 0748     		ldr	r0, .L42+20
 1199              	.LBE329:
 1200              	.LBE331:
 1201              		.loc 7 120 1 view .LVU343
 1202 0024 BDE81040 		pop	{r4, lr}
 1203              		.cfi_restore 14
 1204              		.cfi_restore 4
 1205              		.cfi_def_cfa_offset 0
 1206              	.LBB332:
 1207              	.LBB330:
  11:supersaw.cpp  **** ATone hpf;
 1208              		.loc 7 11 7 view .LVU344
 1209 0028 FFF7FEBF 		b	__aeabi_atexit
 1210              	.LVL78:
 1211              	.L43:
 1212              		.align	2
 1213              	.L42:
 1214 002c 00000000 		.word	.LANCHOR4
 1215 0030 00000000 		.word	__dso_handle
 1216 0034 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 1217 0038 00000000 		.word	__tcf_0
 1218 003c 00000000 		.word	_ZN7daisysp5AToneD1Ev
 1219 0040 00000000 		.word	.LANCHOR1
 1220              	.LBE330:
 1221              	.LBE332:
 1222              		.cfi_endproc
 1223              	.LFE5343:
 1225              		.section	.init_array,"aw",%init_array
 1226              		.align	2
 1227 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 1228              		.global	mixAmounts
 1229              		.global	phases
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 50


 1230              		.global	detunes
 1231              		.global	knobValue
 1232              		.global	ampCurve
 1233              		.global	detuneCurve
 1234              		.global	hpf
 1235              		.global	superSaws
 1236              		.global	hw
 1237              		.section	.bss.hpf,"aw",%nobits
 1238              		.align	2
 1239              		.set	.LANCHOR1,. + 0
 1242              	hpf:
 1243 0000 00000000 		.space	24
 1243      00000000 
 1243      00000000 
 1243      00000000 
 1243      00000000 
 1244              		.section	.bss.hw,"aw",%nobits
 1245              		.align	2
 1246              		.set	.LANCHOR4,. + 0
 1249              	hw:
 1250 0000 00000000 		.space	60
 1250      00000000 
 1250      00000000 
 1250      00000000 
 1250      00000000 
 1251              		.section	.bss.knobValue,"aw",%nobits
 1252              		.align	2
 1253              		.set	.LANCHOR6,. + 0
 1256              	knobValue:
 1257 0000 00000000 		.space	4
 1258              		.section	.bss.phases,"aw",%nobits
 1259              		.align	2
 1260              		.set	.LANCHOR5,. + 0
 1263              	phases:
 1264 0000 00000000 		.space	28
 1264      00000000 
 1264      00000000 
 1264      00000000 
 1264      00000000 
 1265              		.section	.bss.superSaws,"aw",%nobits
 1266              		.align	2
 1267              		.set	.LANCHOR0,. + 0
 1270              	superSaws:
 1271 0000 00000000 		.space	280
 1271      00000000 
 1271      00000000 
 1271      00000000 
 1271      00000000 
 1272              		.section	.data.ampCurve,"aw"
 1273              		.align	2
 1274              		.set	.LANCHOR3,. + 0
 1277              	ampCurve:
 1278 0000 601F1D3D 		.word	1025318752
 1279 0004 8FC2F53D 		.word	1039516303
 1280 0008 5C8F423E 		.word	1044549468
 1281 000c 0000803E 		.word	1048576000
 1282 0010 52B89E3E 		.word	1050589266
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 51


 1283 0014 A470BD3E 		.word	1052602532
 1284 0018 3D0AD73E 		.word	1054280253
 1285 001c 1F85EB3E 		.word	1055622431
 1286 0020 0000003F 		.word	1056964608
 1287 0024 14AE073F 		.word	1057467924
 1288 0028 295C0F3F 		.word	1057971241
 1289 002c E17A143F 		.word	1058306785
 1290 0030 3D0A173F 		.word	1058474557
 1291 0034 9A99193F 		.word	1058642330
 1292 0038 48E11A3F 		.word	1058726216
 1293 003c 9A99193F 		.word	1058642330
 1294 0040 3D0A173F 		.word	1058474557
 1295              		.section	.data.detuneCurve,"aw"
 1296              		.align	2
 1297              		.set	.LANCHOR2,. + 0
 1300              	detuneCurve:
 1301 0000 00000000 		.word	0
 1302 0004 297A1E3C 		.word	1008630313
 1303 0008 7885B43C 		.word	1018463608
 1304 000c 6A1D0B3D 		.word	1024138602
 1305 0010 308B3F3D 		.word	1027574576
 1306 0014 782F723D 		.word	1030893432
 1307 0018 D269923D 		.word	1033005522
 1308 001c E8BBAB3D 		.word	1034664936
 1309 0020 F618C63D 		.word	1036392694
 1310 0024 26E3F83D 		.word	1039721254
 1311 0028 76A8163E 		.word	1041672310
 1312 002c 1119463E 		.word	1044781329
 1313 0030 9142793E 		.word	1048134289
 1314 0034 1A36963E 		.word	1050031642
 1315 0038 EACAAF3E 		.word	1051708138
 1316 003c 151DC93E 		.word	1053367573
 1317 0040 0000803F 		.word	1065353216
 1318              		.section	.data.detunes,"aw"
 1319              		.align	2
 1320              		.set	.LANCHOR7,. + 0
 1323              	detunes:
 1324 0000 D053E1BD 		.word	-1109306416
 1325 0004 89C980BD 		.word	-1115633271
 1326 0008 E5EF9FBC 		.word	-1130369051
 1327 000c 00000000 		.word	0
 1328 0010 EE1EA33C 		.word	1017323246
 1329 0014 20A17E3D 		.word	1031708960
 1330 0018 0410DC3D 		.word	1037832196
 1331              		.section	.data.mixAmounts,"aw"
 1332              		.align	2
 1333              		.set	.LANCHOR8,. + 0
 1336              	mixAmounts:
 1337 0000 CDCCCC3E 		.word	1053609165
 1338 0004 CDCCCC3E 		.word	1053609165
 1339 0008 CDCCCC3E 		.word	1053609165
 1340 000c CDCCCC3E 		.word	1053609165
 1341 0010 0000003F 		.word	1056964608
 1342 0014 0000003F 		.word	1056964608
 1343 0018 6666E63E 		.word	1055286886
 1344              		.text
 1345              	.Letext0:
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 52


 1346              		.file 13 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\mach
 1347              		.file 14 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\sys\
 1348              		.file 15 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\stdi
 1349              		.file 16 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\lib\\gcc\\arm-none-eabi\\10.
 1350              		.file 17 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1351              		.file 18 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1352              		.file 19 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1353              		.file 20 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1354              		.file 21 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1355              		.file 22 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1356              		.file 23 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1357              		.file 24 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1358              		.file 25 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1359              		.file 26 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1360              		.file 27 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1361              		.file 28 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1362              		.file 29 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1363              		.file 30 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1364              		.file 31 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1365              		.file 32 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1366              		.file 33 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1367              		.file 34 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1368              		.file 35 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\sys\
 1369              		.file 36 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\sys\
 1370              		.file 37 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\sys\
 1371              		.file 38 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\math
 1372              		.file 39 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\stdl
 1373              		.file 40 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1374              		.file 41 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\c++\
 1375              		.file 42 "../../libDaisy//src/per/tim.h"
 1376              		.file 43 "../../libDaisy//src/per/sai.h"
 1377              		.file 44 "../../libDaisy//src/hid/logger_impl.h"
 1378              		.file 45 "../../libDaisy//src/util/wav_format.h"
 1379              		.file 46 "../../libDaisy//src/dev/max11300.h"
 1380              		.file 47 "../../libDaisy//src/hid/logger.h"
 1381              		.file 48 "../../libDaisy//src/per/gpio.h"
 1382              		.file 49 "../../libDaisy//src/dev/sdram.h"
 1383              		.file 50 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\lib\\gcc\\arm-none-eabi\\10.
 1384              		.file 51 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\stdi
 1385              		.file 52 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\stri
 1386              		.file 53 "../../DaisySP//Source/Control/adenv.h"
 1387              		.file 54 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\wcha
 1388              		.file 55 "c:\\users\\danst\\documents\\daisytoolchain-0.3.3\\windows\\arm-none-eabi\\include\\loca
 1389              		.file 56 "../../libDaisy//src/dev/sr_595.h"
 1390              		.file 57 "<built-in>"
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 supersaw.cpp
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:17     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:67     .text._ZN7daisysp5AToneD2Ev:00000000 $t
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:75     .text._ZN7daisysp5AToneD2Ev:00000000 _ZN7daisysp5AToneD2Ev
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:75     .text._ZN7daisysp5AToneD2Ev:00000000 _ZN7daisysp5AToneD1Ev
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:92     .text.__tcf_0:00000000 $t
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:99     .text.__tcf_0:00000000 __tcf_0
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:113    .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:121    .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:237    .text._Z13AudioCallbackPKPKfPPfj:0000005c $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:244    .text._Z12lookupDetunef:00000000 $t
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:252    .text._Z12lookupDetunef:00000000 _Z12lookupDetunef
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:305    .text._Z12lookupDetunef:00000038 $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:310    .text._Z9lookupAmpf:00000000 $t
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:318    .text._Z9lookupAmpf:00000000 _Z9lookupAmpf
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:382    .text._Z9lookupAmpf:0000004c $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:387    .text.startup.main:00000000 $t
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:395    .text.startup.main:00000000 main
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1048   .text.startup.main:00000200 $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1072   .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1079   .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1214   .text.startup._GLOBAL__sub_I_hw:0000002c $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1226   .init_array:00000000 $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1336   .data.mixAmounts:00000000 mixAmounts
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1263   .bss.phases:00000000 phases
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1323   .data.detunes:00000000 detunes
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1256   .bss.knobValue:00000000 knobValue
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1277   .data.ampCurve:00000000 ampCurve
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1300   .data.detuneCurve:00000000 detuneCurve
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1242   .bss.hpf:00000000 hpf
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1270   .bss.superSaws:00000000 superSaws
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1249   .bss.hw:00000000 hw
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1238   .bss.hpf:00000000 $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1245   .bss.hw:00000000 $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1252   .bss.knobValue:00000000 $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1259   .bss.phases:00000000 $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1266   .bss.superSaws:00000000 $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1273   .data.ampCurve:00000000 $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1296   .data.detuneCurve:00000000 $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1319   .data.detunes:00000000 $d
C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s:1332   .data.mixAmounts:00000000 $d
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN7daisysp5AToneD5Ev

UNDEFINED SYMBOLS
_ZN7daisysp10Oscillator7ProcessEv
_ZN7daisysp5ATone7ProcessERf
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN7daisysp10Oscillator12CalcPhaseIncEf
rand
_ZN7daisysp5ATone4InitEf
_ZN7daisysp5ATone21CalculateCoefficientsEv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
ARM GAS  C:\Users\danst\AppData\Local\Temp\cc7NMwXp.s 			page 54


_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZNK5daisy9AdcHandle8GetFloatEh
_ZN5daisy6System5DelayEm
__aeabi_atexit
__dso_handle
